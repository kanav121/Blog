[
  {
    "objectID": "posts/Job-Search/index.html",
    "href": "posts/Job-Search/index.html",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "",
    "text": "Are you tired of feeling stuck in your career? Do you dream of making a significant change but don’t know where to start? As a data scientist specializing in time series modeling and regression-based models using R, I felt exactly the same way. But I’m here to tell you that with the right mindset and a little bit of hard work, anything is possible."
  },
  {
    "objectID": "posts/Job-Search/index.html#introduction-my-career-shift-story-and-how-you-can-do-it-too",
    "href": "posts/Job-Search/index.html#introduction-my-career-shift-story-and-how-you-can-do-it-too",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Introduction: My career shift story and how you can do it too",
    "text": "Introduction: My career shift story and how you can do it too\nI made the decision to shift my career from the energy sector to either health or finance industries, with a goal of securing a job that would offer at least a 120% salary increase from my current position, ideally in the FinTech space. And guess what? I not only achieved that goal but also landed my dream job!\nDon’t settle for a career that doesn’t excite you. Take charge of your future and make the change you’ve been dreaming of. Join me on this journey, and let’s make 2023 the year of success and fulfillment!\nIn this blog post, I’ll share my journey with you and provide valuable insights and tips for how you too can make a career shift and achieve your dream job. From studying Python and machine learning basics to creating resumes and profiles on job portals, I’ll guide you through the entire process. I’ll also share my experience with the roller-coaster of interviews and how I overcame my lack of knowledge in machine learning algorithms."
  },
  {
    "objectID": "posts/Job-Search/index.html#initial-plan-and-challenges",
    "href": "posts/Job-Search/index.html#initial-plan-and-challenges",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Initial plan and challenges",
    "text": "Initial plan and challenges\nBack in September, I had planned to study Python and machine learning basics for a month before creating an online profile. Unfortunately, my motivation dwindled and I spent two months halfheartedly reading articles and making notes out of them. Nonetheless, I eventually created a resume using resources like codebasics and Krish Naik’s videos and established profiles on job portals such as Naukri and LinkedIn. Soon after, I started receiving calls from various organizations, but the interview process was a reality check for me as my understanding of machine learning algorithms was only surface-level."
  },
  {
    "objectID": "posts/Job-Search/index.html#learning-from-failures",
    "href": "posts/Job-Search/index.html#learning-from-failures",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Learning from failures",
    "text": "Learning from failures\nIn November, I learned some valuable lessons through my experiences.I would usually clear first round but would fail in second round one such example was I confidently answered questions related to my resume but was stumped when asked to elaborate on categorical data encoding like difference between label and hot encoding. Similarly, when asked about hypothesis testing, I gave a confused response and said alpha was 0.5 instead of 0.05. Despite making notes on Krish Naik’s Live Statistics playlist, I hadn’t covered these topics sincerely.\nHowever, instead of giving up, I used these experiences as motivation to learn and grow. I went back to my notes, re-studied the topics where I had made mistakes, and updated my notes accordingly. I realized that learning is a continuous process and that we can always improve.\nIn the introduction, it is mentioned that I have specialized in time series data. However, due to the limited availability of data for some clients, I did not have much exposure to seasonal data and had only relied on regression-based models for time series analysis. Although I had previously attempted to use models such as Prophet and ARIMA, they did not yield favorable results, and I had not included them in my resume nor prepared them for the interviews. Unfortunately, during a technical interview(3rd technical round), I was asked about ACF, PACF, and the ADF test, and I was unable to answer these questions. To address this knowledge gap, I dedicated the next few weeks to learning the basics of time series terminology and models.\n\nGaining confidence\nDespite a dry spell in December where I didn’t receive any recruiter calls, I didn’t lose hope. Instead, I gained the confidence needed to crack technical interviews. I made sure to prepare well, studying topics in which I was lacking."
  },
  {
    "objectID": "posts/Job-Search/index.html#silver-lining",
    "href": "posts/Job-Search/index.html#silver-lining",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Silver Lining",
    "text": "Silver Lining\nLong story short in January, I had received two offers with a 50% salary increase, but they were not in the FinTech industry, which was my goal. I was satisfied but not happy. Then, I cleared the first round of interviews for two companies, X and Y, on the same day while having a high fever (I’m not blowing my own trumpet, I mentioned this to make the point that if you work hard you will gain confidence eventually). One of the interviewers suggested I should reschedule, but I declined as I did not want to tarnish my reputation."
  },
  {
    "objectID": "posts/Job-Search/index.html#alls-well-that-ends-well",
    "href": "posts/Job-Search/index.html#alls-well-that-ends-well",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "All’s Well that Ends Well",
    "text": "All’s Well that Ends Well\nIn February, I received an offer letter from company X with a 95% salary increase. During my last round of interviews with company Y, I showed them this offer, and they offered me a 150% salary increase, which was a dream come true. I deleted my profile from Naukri and this company Y happened to be TransUnion, a FinTech company where I joined as a Senior Analyst."
  },
  {
    "objectID": "posts/Job-Search/index.html#the-reality-of-recruitment-process",
    "href": "posts/Job-Search/index.html#the-reality-of-recruitment-process",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "The Reality of Recruitment Process",
    "text": "The Reality of Recruitment Process\nI realized early on that the recruitment process is not always straightforward. I cleared the first round in one organization, only to be informed weeks later that they had filled the position internally. In two other organizations, after clearing the first round, I was later told that openings were closed. In another organization, I cleared three rounds and even submitted my documents, only to be told later that I was the second priority and the position was filled via referral. However, I didn’t let these setbacks discourage me, and I continued to persevere."
  },
  {
    "objectID": "posts/Job-Search/index.html#the-journey-continues",
    "href": "posts/Job-Search/index.html#the-journey-continues",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "The Journey Continues",
    "text": "The Journey Continues\nI learned that mistakes are an integral part of the learning process. Even though I had an offer from TransUnion I gave another interview (just of fun). The interview taught me about SARIMAX (we can use this for multivariate time series) and I knew only about ARIMA,SARIMA etc. which are univariate models. It was a humbling experience, but it taught me a valuable lesson that ‘You may think you know but actually you don’t’."
  },
  {
    "objectID": "posts/Job-Search/index.html#insights",
    "href": "posts/Job-Search/index.html#insights",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Insights",
    "text": "Insights\n1. Set a clear and measurable goal for yourself.\n2. I found that building a strong online profile is essential when looking for job opportunities even before you started preparing because it take time to get a call.\n3. Make your resume plain and simple. Tailor your resume and cover letter to each position. Highlight your relevant skills and experience and show how you can add value to the company.\n4. Prepare for interviews by researching the company and practicing your responses to common interview questions. Dress professionally and arrive on time.\n5. It’s better to have a deep understanding of a few machine learning algorithms rather than a superficial understanding of many.\n6. Interviews can be nerve-wracking, but it’s essential to remain calm and not let anxiety take over.\n7. Keep your notes updated and review them regularly\n8. Follow up after interviews with a thank-you email or note, and express your continued interest in the position and also ask for the feed back(very important).\n9. There is no such thing called as perfect interview, you can’t answer 100% of the questions.\n10. Don’t be afraid to negotiate job offers. Do your research on salary ranges for the position and make a counter offer if necessary. This is the most important tip I can give you, as it can make a huge difference in your income and satisfaction."
  },
  {
    "objectID": "posts/Job-Search/index.html#study-sources",
    "href": "posts/Job-Search/index.html#study-sources",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Study Sources",
    "text": "Study Sources\nI found the book “Approaching Almost Any Machine Learning Problem” by Abhishek Thakur to be an excellent resource for building a strong foundation in machine learning.\nI also relied heavily on online resources like Statquest and Krish Naik’s videos, as well as blogs on various websites like Medium, Towards Data Science, and Analytics Vidhya, like for Decision tree I think KDnuggets have one of the finest blog on it.\nMachine Learning Interviews Book by Chip Huyen was another source from where I learned non technical (like how to negotiate salary) & technical aspect of interview."
  },
  {
    "objectID": "posts/Job-Search/index.html#conclusion",
    "href": "posts/Job-Search/index.html#conclusion",
    "title": "How I got multiple offers and Landed My Dream Job in Fintech",
    "section": "Conclusion",
    "text": "Conclusion\nIn conclusion, my journey to landing a Senior Analyst role in a FinTech company was not easy, but it taught me valuable lessons about perseverance, learning from mistakes, and the importance of building a strong online profile. I hope my journey can inspire others to pursue their dreams and never give up, no matter how challenging the journey may be.\nHope that’s the key, be willing to work hard ‘you will get success may not be today but tomorrow you surely will’."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "FastAI Course Lecture 3 Notes\n\n\n\nComputer Vision\n\n\nFastAI\n\n\n\n\n\n\n\nKanav Sharma\n\n\nApr 14, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nFastAI Course Lecture 2 Notes\n\n\n\nComputer Vision\n\n\nFastAI\n\n\n\n\n\n\n\nKanav Sharma\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow I got multiple offers and Landed My Dream Job in Fintech\n\n\n\nInformative\n\n\nInterview\n\n\n\nA blog regarding how I got what I wanted\n\n\n\nKanav Sharma\n\n\nMar 23, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my digital space! I’m a data scientist in FinTech venturing into the exciting world of Deep Learning. Over the coming months, I’ll share my data science projects and learnings here as I delve deeper into AI and its boundless potential.\nWhether you’re a fellow data enthusiast, an AI aficionado, or simply curious, join me on this captivating journey. Get ready to explore the magic of data, algorithms, and the frontier of Deep Learning. Let’s unravel mysteries and unlock new frontiers together! I’m always eager to learn, so if you’d like to provide feedback, guidance, or engage in discussion on any topic or project, feel free to reach out to me at kanav608@gmail.com."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nSGVU, Jaipur | 2015-2019\nBtech - CSE | 7.96 CGPA"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nTransunion | Senior Analyst | March 2023 - Present\nKreate Energy Pvt Ltd | Junior Associate | Feb 2020 - March 2023\nRoboMq Pvt Ltd | Data Scientist | January 2019 - January 2020"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html",
    "href": "posts/FastAI_Course_Lect2/index.html",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "Let’s install all required packages\n#hide\n! [ -e /content ] && pip install -Uqq fastbook\nimport fastbook\nfastbook.setup_book()\n\n#hide\nfrom fastbook import *\nfrom fastai.vision.widgets import *\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m719.8/719.8 kB[0m [31m7.6 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m510.5/510.5 kB[0m [31m10.6 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m116.3/116.3 kB[0m [31m12.1 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m194.1/194.1 kB[0m [31m9.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m134.8/134.8 kB[0m [31m15.4 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.6/1.6 MB[0m [31m16.3 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m23.7/23.7 MB[0m [31m15.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m823.6/823.6 kB[0m [31m26.3 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m14.1/14.1 MB[0m [31m53.7 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m731.7/731.7 MB[0m [31m901.8 kB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m410.6/410.6 MB[0m [31m2.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m121.6/121.6 MB[0m [31m8.2 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m56.5/56.5 MB[0m [31m12.1 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m124.2/124.2 MB[0m [31m8.3 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m196.0/196.0 MB[0m [31m2.3 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m166.0/166.0 MB[0m [31m7.2 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m99.1/99.1 kB[0m [31m15.6 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m21.1/21.1 MB[0m [31m68.6 MB/s[0m eta [36m0:00:00[0m\n[?25hMounted at /content/gdrive\n\n\nExtract Data using DuckDuckGo function 1. Create dynamic path according to there name store file 2. Create a dictionary to track the number of downloaded images per category (e.g., cat).\n??search_images_ddg\nSignature: search_images_ddg(term, max_images=200)\ncat_types = 'Leopard','Cougar','Tiger','Lion','Cheetah','SnowLeopard'\npath = Path('CAT')\n\n#remove folder with file in it\nimport shutil\nif path.exists():\n  shutil.rmtree(path)\n\nper_cat_count = {}\n\nif not path.exists():\n    path.mkdir()\n    for o in cat_types:\n        dest = (path/o)\n        dest.mkdir(exist_ok=True)\n        results = search_images_ddg(f'{o}')\n        download_images(dest, urls=results)\n        per_cat_count[f'{o}'] = len(results)\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\nCount of Images per category\nper_cat_count\n{'Leopard': 200,\n 'Cougar': 200,\n 'Tiger': 200,\n 'Lion': 200,\n 'Cheetah': 200,\n 'SnowLeopard': 200}\nSo we got 200 images per type\nWhile downloading we can get corrupt images lets first remove them. verify_images() will return path of such images and using unlink we can remove these files.\nfns = get_image_files(path)\ntotal_imagelength = len(fns)\nfailed = verify_images(fns)\nfailed_imagelength = len(failed)\nfailed\n(#51) [Path('CAT/Lion/d61427d6-f097-4727-a3ba-de31366199d6.jpg'),Path('CAT/Lion/85f17699-5ebe-4e88-9798-14b7e66281d7.png'),Path('CAT/Lion/84589c8d-a1da-45be-9fe6-1f87a34289b3.jpg'),Path('CAT/Lion/cf746926-23d6-4754-b7d0-25779410ee15.jpg'),Path('CAT/SnowLeopard/f3ce804b-5071-4312-8633-9895e721340c.jpg'),Path('CAT/SnowLeopard/961333aa-79da-4dc2-9f56-f4d07697a14e.jpg'),Path('CAT/SnowLeopard/57b3a667-1d3e-47bb-8fff-3e1505a5a12f.jpg'),Path('CAT/SnowLeopard/1b3f2639-1c5d-4e26-86c8-feb4b99bf76a.jpg'),Path('CAT/Cougar/cd7a89c9-8667-4d24-aceb-3a85bb7b247e.jpg'),Path('CAT/Cougar/44b6067c-f159-4d5f-819a-11e7d50a3fd8.jpg')...]\nfailed.map(Path.unlink);\nDict = {\"Total_Image_Count\": total_imagelength, \"Failed_Image_Count\": failed_imagelength}\nDict\n{'Total_Image_Count': 1115, 'Failed_Image_Count': 51}\n\n\n\nCreate a data block and load that data block in data loader.\n\nData Block - Is a blueprint on how to assemble data that we want to send for training.\nData Loader - Is used to pass that data which is in batch format(i.e created using data blocks) to the GPU.\n\nbig_cat = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(128))\ndls = big_cat.dataloaders(path)\nDataBlock is a convenient way to organize the data loading, splitting, and transformation steps in preparation for training a deep learning model using the fastai library.\nDataBlock(): is suitable for a classification task where you have a dataset of images, and each image belongs to a specific category (e.g., types of cats).\nblocks=(ImageBlock, CategoryBlock): It specify that our input are images & our target are categories(types of cat)\nget_image_files: this help to get list of all the images from subfolder.\nparent_label: This is a function that extracts the labels (categories) for each item.’Leapord’,‘Tiger’,‘Lion’\nA DataLoaders includes validation and training DataLoader. Let’s check random validation dataset.\ndls.valid.show_batch(max_n=6, nrows=2)\n\n\n\npng\n\n\nSquishing or Padding for Model Training :\n\nSquishing or padding is applied to images during training.\nCropping may result in data loss, while squishing/stretching can lead to unrealistic shapes, impacting accuracy.\nPadding may introduce excessive empty space, causing wasted computation.\n\nPractical Approach - Data Augmentation: The idea of getting different picture every time from same image is called data augmentation.\n\nRandomly select and crop parts of the image during each epoch.\nTrain the model on different image parts across multiple epochs.\nThis approach creates random variations in input data without altering its meaning.\nAiming to provide diverse perspectives, it ensures the model sees different pictures from the same image in each iteration..\n\n\nTo train our model, we’ll use RandomResizedCrop with an image size of 224 px, which is fairly standard for image classification, and default aug_transforms:\nbig_cat = big_cat.new(\n    item_tfms=RandomResizedCrop(224, min_scale=0.5),\n    batch_tfms=aug_transforms())\nbig_cat_dls = big_cat.dataloaders(path)\nbig_cat_dls.train.show_batch(max_n=8, nrows=2)\n\n\n\npng\n\n\n\n\n\nTip1 - Prioritaize to train a quick and simple model first, rather than going for big model directly.\nTip2 - Build model first and then clean the data. And then again train the model.\nlearn = vision_learner(big_cat_dls, resnet18, metrics=error_rate)\nlearn.fine_tune(8)\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.878671\n\n\n0.548061\n\n\n0.183962\n\n\n00:36\n\n\n\n\n\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.669399\n\n\n0.442041\n\n\n0.160377\n\n\n00:36\n\n\n\n\n1\n\n\n0.566393\n\n\n0.425440\n\n\n0.136792\n\n\n00:38\n\n\n\n\n2\n\n\n0.476826\n\n\n0.555463\n\n\n0.179245\n\n\n00:38\n\n\n\n\n3\n\n\n0.429597\n\n\n0.524273\n\n\n0.146226\n\n\n00:37\n\n\n\n\n4\n\n\n0.367606\n\n\n0.519690\n\n\n0.117925\n\n\n00:36\n\n\n\n\n5\n\n\n0.319734\n\n\n0.529199\n\n\n0.113208\n\n\n00:37\n\n\n\n\n6\n\n\n0.287094\n\n\n0.516044\n\n\n0.127358\n\n\n00:38\n\n\n\n\n7\n\n\n0.260760\n\n\n0.514551\n\n\n0.132075\n\n\n00:36\n\n\n\n\n\nHere we see, in last epoch rise in error_rate which means that in stochastic gradient descent we have surpassed deepest point and trending towards upward direction which leads to higher loss rate. It indicates that the training process should likely be stopped to prevent further divergence from the optimal solution\n###Visualize Confusion Matrix\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n\n\n\n\n\npng\n\n\nplot_top_losses shows us the images with the highest loss in our dataset.\ninterp.plot_top_losses(4, nrows=1, figsize=(18,4))\n\n\n\n\npng\n\n\n\n\n\nImageClassifierCleaner enables us to review all images associated with a specific category and identify their placement within the dataloader, whether in the training or validation set.\nThe images are organized in ascending order of confidence, prioritizing those with the highest loss. This allows for efficient data sorting by simply examining the initial images. Users can choose to keep, delete, or modify the category label (type of cat) as needed.\n#hide_output\ncleaner = ImageClassifierCleaner(learn)\ncleaner\n\n\nVBox(children=(Dropdown(options=('Cheetah', 'Cougar', 'Leopard', 'Lion', 'SnowLeopard', 'Tiger'), value='Cheet…\nThe Cleaner possesses information regarding the files we deleted and whose labels we modified. Now, we will implement these changes.\n\nfor idx in cleaner.delete(): cleaner.fns[idx].unlink()\nfor idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat)\n\n\n\nbig_cat = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(128))\nbig_cat = big_cat.new(\n    item_tfms=RandomResizedCrop(224, min_scale=0.5),\n    batch_tfms=aug_transforms())\nbig_cat_dls = big_cat.dataloaders(path)\nbig_cat_dls.train.show_batch(max_n=8, nrows=2)\n\n\n\n\npng\n\n\nlearn = vision_learner(big_cat_dls, resnet34, metrics=error_rate)\nlearn.fine_tune(8)\nDownloading: \"https://download.pytorch.org/models/resnet34-b627a593.pth\" to /root/.cache/torch/hub/checkpoints/resnet34-b627a593.pth\n100%|██████████| 83.3M/83.3M [00:00&lt;00:00, 121MB/s]\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.839337\n\n\n0.557398\n\n\n0.161137\n\n\n00:36\n\n\n\n\n\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.552628\n\n\n0.516515\n\n\n0.137441\n\n\n00:37\n\n\n\n\n1\n\n\n0.457381\n\n\n0.544474\n\n\n0.175355\n\n\n00:42\n\n\n\n\n2\n\n\n0.399777\n\n\n0.615449\n\n\n0.146919\n\n\n00:38\n\n\n\n\n3\n\n\n0.345620\n\n\n0.601597\n\n\n0.151659\n\n\n00:40\n\n\n\n\n4\n\n\n0.293677\n\n\n0.630620\n\n\n0.146919\n\n\n00:37\n\n\n\n\n5\n\n\n0.256501\n\n\n0.669779\n\n\n0.137441\n\n\n00:37\n\n\n\n\n6\n\n\n0.227690\n\n\n0.648144\n\n\n0.142180\n\n\n00:36\n\n\n\n\n7\n\n\n0.207254\n\n\n0.651927\n\n\n0.137441\n\n\n00:37\n\n\n\n\n\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n\n\n\n\n\npng\n\n\ninterp.plot_top_losses(4, nrows=1, figsize=(17,4))\n\n\n\n\npng\n\n\n\n\n\n\n\n\nlearn.export('Lecture2_Big_Cat_Model.pkl')\n\n\n\nYou can access live model here deployed using Hugging Face & gradio. Wanna know how to do it ? refer Gradio-HuggingFace.\nYou can access repo here"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#download-and-sort-out-the-dataimages.",
    "href": "posts/FastAI_Course_Lect2/index.html#download-and-sort-out-the-dataimages.",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "Extract Data using DuckDuckGo function 1. Create dynamic path according to there name store file 2. Create a dictionary to track the number of downloaded images per category (e.g., cat).\n??search_images_ddg\nSignature: search_images_ddg(term, max_images=200)\ncat_types = 'Leopard','Cougar','Tiger','Lion','Cheetah','SnowLeopard'\npath = Path('CAT')\n\n#remove folder with file in it\nimport shutil\nif path.exists():\n  shutil.rmtree(path)\n\nper_cat_count = {}\n\nif not path.exists():\n    path.mkdir()\n    for o in cat_types:\n        dest = (path/o)\n        dest.mkdir(exist_ok=True)\n        results = search_images_ddg(f'{o}')\n        download_images(dest, urls=results)\n        per_cat_count[f'{o}'] = len(results)\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\nCount of Images per category\nper_cat_count\n{'Leopard': 200,\n 'Cougar': 200,\n 'Tiger': 200,\n 'Lion': 200,\n 'Cheetah': 200,\n 'SnowLeopard': 200}\nSo we got 200 images per type\nWhile downloading we can get corrupt images lets first remove them. verify_images() will return path of such images and using unlink we can remove these files.\nfns = get_image_files(path)\ntotal_imagelength = len(fns)\nfailed = verify_images(fns)\nfailed_imagelength = len(failed)\nfailed\n(#51) [Path('CAT/Lion/d61427d6-f097-4727-a3ba-de31366199d6.jpg'),Path('CAT/Lion/85f17699-5ebe-4e88-9798-14b7e66281d7.png'),Path('CAT/Lion/84589c8d-a1da-45be-9fe6-1f87a34289b3.jpg'),Path('CAT/Lion/cf746926-23d6-4754-b7d0-25779410ee15.jpg'),Path('CAT/SnowLeopard/f3ce804b-5071-4312-8633-9895e721340c.jpg'),Path('CAT/SnowLeopard/961333aa-79da-4dc2-9f56-f4d07697a14e.jpg'),Path('CAT/SnowLeopard/57b3a667-1d3e-47bb-8fff-3e1505a5a12f.jpg'),Path('CAT/SnowLeopard/1b3f2639-1c5d-4e26-86c8-feb4b99bf76a.jpg'),Path('CAT/Cougar/cd7a89c9-8667-4d24-aceb-3a85bb7b247e.jpg'),Path('CAT/Cougar/44b6067c-f159-4d5f-819a-11e7d50a3fd8.jpg')...]\nfailed.map(Path.unlink);\nDict = {\"Total_Image_Count\": total_imagelength, \"Failed_Image_Count\": failed_imagelength}\nDict\n{'Total_Image_Count': 1115, 'Failed_Image_Count': 51}"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#prepare-data-for-model-training-data-loaders-data-augmentaion-etc..",
    "href": "posts/FastAI_Course_Lect2/index.html#prepare-data-for-model-training-data-loaders-data-augmentaion-etc..",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "Create a data block and load that data block in data loader.\n\nData Block - Is a blueprint on how to assemble data that we want to send for training.\nData Loader - Is used to pass that data which is in batch format(i.e created using data blocks) to the GPU.\n\nbig_cat = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(128))\ndls = big_cat.dataloaders(path)\nDataBlock is a convenient way to organize the data loading, splitting, and transformation steps in preparation for training a deep learning model using the fastai library.\nDataBlock(): is suitable for a classification task where you have a dataset of images, and each image belongs to a specific category (e.g., types of cats).\nblocks=(ImageBlock, CategoryBlock): It specify that our input are images & our target are categories(types of cat)\nget_image_files: this help to get list of all the images from subfolder.\nparent_label: This is a function that extracts the labels (categories) for each item.’Leapord’,‘Tiger’,‘Lion’\nA DataLoaders includes validation and training DataLoader. Let’s check random validation dataset.\ndls.valid.show_batch(max_n=6, nrows=2)\n\n\n\npng\n\n\nSquishing or Padding for Model Training :\n\nSquishing or padding is applied to images during training.\nCropping may result in data loss, while squishing/stretching can lead to unrealistic shapes, impacting accuracy.\nPadding may introduce excessive empty space, causing wasted computation.\n\nPractical Approach - Data Augmentation: The idea of getting different picture every time from same image is called data augmentation.\n\nRandomly select and crop parts of the image during each epoch.\nTrain the model on different image parts across multiple epochs.\nThis approach creates random variations in input data without altering its meaning.\nAiming to provide diverse perspectives, it ensures the model sees different pictures from the same image in each iteration..\n\n\nTo train our model, we’ll use RandomResizedCrop with an image size of 224 px, which is fairly standard for image classification, and default aug_transforms:\nbig_cat = big_cat.new(\n    item_tfms=RandomResizedCrop(224, min_scale=0.5),\n    batch_tfms=aug_transforms())\nbig_cat_dls = big_cat.dataloaders(path)\nbig_cat_dls.train.show_batch(max_n=8, nrows=2)\n\n\n\npng"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#train-the-model",
    "href": "posts/FastAI_Course_Lect2/index.html#train-the-model",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "Tip1 - Prioritaize to train a quick and simple model first, rather than going for big model directly.\nTip2 - Build model first and then clean the data. And then again train the model.\nlearn = vision_learner(big_cat_dls, resnet18, metrics=error_rate)\nlearn.fine_tune(8)\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.878671\n\n\n0.548061\n\n\n0.183962\n\n\n00:36\n\n\n\n\n\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.669399\n\n\n0.442041\n\n\n0.160377\n\n\n00:36\n\n\n\n\n1\n\n\n0.566393\n\n\n0.425440\n\n\n0.136792\n\n\n00:38\n\n\n\n\n2\n\n\n0.476826\n\n\n0.555463\n\n\n0.179245\n\n\n00:38\n\n\n\n\n3\n\n\n0.429597\n\n\n0.524273\n\n\n0.146226\n\n\n00:37\n\n\n\n\n4\n\n\n0.367606\n\n\n0.519690\n\n\n0.117925\n\n\n00:36\n\n\n\n\n5\n\n\n0.319734\n\n\n0.529199\n\n\n0.113208\n\n\n00:37\n\n\n\n\n6\n\n\n0.287094\n\n\n0.516044\n\n\n0.127358\n\n\n00:38\n\n\n\n\n7\n\n\n0.260760\n\n\n0.514551\n\n\n0.132075\n\n\n00:36\n\n\n\n\n\nHere we see, in last epoch rise in error_rate which means that in stochastic gradient descent we have surpassed deepest point and trending towards upward direction which leads to higher loss rate. It indicates that the training process should likely be stopped to prevent further divergence from the optimal solution\n###Visualize Confusion Matrix\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n\n\n\n\n\npng\n\n\nplot_top_losses shows us the images with the highest loss in our dataset.\ninterp.plot_top_losses(4, nrows=1, figsize=(18,4))\n\n\n\n\npng"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#clean-the-data",
    "href": "posts/FastAI_Course_Lect2/index.html#clean-the-data",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "ImageClassifierCleaner enables us to review all images associated with a specific category and identify their placement within the dataloader, whether in the training or validation set.\nThe images are organized in ascending order of confidence, prioritizing those with the highest loss. This allows for efficient data sorting by simply examining the initial images. Users can choose to keep, delete, or modify the category label (type of cat) as needed.\n#hide_output\ncleaner = ImageClassifierCleaner(learn)\ncleaner\n\n\nVBox(children=(Dropdown(options=('Cheetah', 'Cougar', 'Leopard', 'Lion', 'SnowLeopard', 'Tiger'), value='Cheet…\nThe Cleaner possesses information regarding the files we deleted and whose labels we modified. Now, we will implement these changes.\n\nfor idx in cleaner.delete(): cleaner.fns[idx].unlink()\nfor idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat)"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#re-train-the-model-using-updated-data",
    "href": "posts/FastAI_Course_Lect2/index.html#re-train-the-model-using-updated-data",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "big_cat = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(128))\nbig_cat = big_cat.new(\n    item_tfms=RandomResizedCrop(224, min_scale=0.5),\n    batch_tfms=aug_transforms())\nbig_cat_dls = big_cat.dataloaders(path)\nbig_cat_dls.train.show_batch(max_n=8, nrows=2)\n\n\n\n\npng\n\n\nlearn = vision_learner(big_cat_dls, resnet34, metrics=error_rate)\nlearn.fine_tune(8)\nDownloading: \"https://download.pytorch.org/models/resnet34-b627a593.pth\" to /root/.cache/torch/hub/checkpoints/resnet34-b627a593.pth\n100%|██████████| 83.3M/83.3M [00:00&lt;00:00, 121MB/s]\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.839337\n\n\n0.557398\n\n\n0.161137\n\n\n00:36\n\n\n\n\n\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.552628\n\n\n0.516515\n\n\n0.137441\n\n\n00:37\n\n\n\n\n1\n\n\n0.457381\n\n\n0.544474\n\n\n0.175355\n\n\n00:42\n\n\n\n\n2\n\n\n0.399777\n\n\n0.615449\n\n\n0.146919\n\n\n00:38\n\n\n\n\n3\n\n\n0.345620\n\n\n0.601597\n\n\n0.151659\n\n\n00:40\n\n\n\n\n4\n\n\n0.293677\n\n\n0.630620\n\n\n0.146919\n\n\n00:37\n\n\n\n\n5\n\n\n0.256501\n\n\n0.669779\n\n\n0.137441\n\n\n00:37\n\n\n\n\n6\n\n\n0.227690\n\n\n0.648144\n\n\n0.142180\n\n\n00:36\n\n\n\n\n7\n\n\n0.207254\n\n\n0.651927\n\n\n0.137441\n\n\n00:37\n\n\n\n\n\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n\n\n\n\n\npng\n\n\ninterp.plot_top_losses(4, nrows=1, figsize=(17,4))\n\n\n\n\npng"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#lets-download-our-model-and-use-it-make-prediction.-in-next-lesson-.",
    "href": "posts/FastAI_Course_Lect2/index.html#lets-download-our-model-and-use-it-make-prediction.-in-next-lesson-.",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "learn.export('Lecture2_Big_Cat_Model.pkl')"
  },
  {
    "objectID": "posts/FastAI_Course_Lect2/index.html#live-model",
    "href": "posts/FastAI_Course_Lect2/index.html#live-model",
    "title": "FastAI Course Lecture 2 Notes",
    "section": "",
    "text": "You can access live model here deployed using Hugging Face & gradio. Wanna know how to do it ? refer Gradio-HuggingFace.\nYou can access repo here"
  },
  {
    "objectID": "posts/FastAI_Course_Lect3/index.html",
    "href": "posts/FastAI_Course_Lect3/index.html",
    "title": "FastAI Course Lecture 3 Notes",
    "section": "",
    "text": "Previously, we obtained our data from the DuckDuckGo API and built our model around that.\nThis time, we will retrieve data from a Kaggle dataset, enhance our model, improve our understanding of different available pre-trained vision architectures in PyTorch using the timm library, and implement another model according to our requirements.\n\n\n\n\nfrom google.colab import files\n\n# Upload the Kaggle API key JSON file\nuploaded = files.upload()\n\n!pip install kaggle\n\n!mkdir -p ~/.kaggle\n!mv kaggle.json ~/.kaggle/\n!chmod 600 ~/.kaggle/kaggle.json\nSaving kaggle.json to kaggle.json\nRequirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.5.16)\nRequirement already satisfied: six&gt;=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.16.0)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from kaggle) (2024.2.2)\nRequirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\nRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.31.0)\nRequirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.66.2)\nRequirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.4)\nRequirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.0.7)\nRequirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle) (6.1.0)\nRequirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach-&gt;kaggle) (0.5.1)\nRequirement already satisfied: text-unidecode&gt;=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify-&gt;kaggle) (1.3)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;kaggle) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;kaggle) (3.6)\n\n\nOpen dataset in Kaggle, click on 3 vertical dots (ellipsis) then click on Copy API comamnd, and we are good to go.\n!kaggle datasets download -d gpiosenka/cats-in-the-wild-image-classification\n\n# Create a folder called \"Big Cat\"\n!mkdir -p Big_Cat\n\n# Unzip the dataset into the \"Big Cat\" folder\n!unzip cats-in-the-wild-image-classification.zip -d Big_Cat\n\n# Remove the zip file\n!rm cats-in-the-wild-image-classification.zip\nDownloading cats-in-the-wild-image-classification.zip to /content\n 96% 118M/123M [00:01&lt;00:00, 57.4MB/s]\n100% 123M/123M [00:01&lt;00:00, 65.0MB/s]\nArchive:  cats-in-the-wild-image-classification.zip\n  inflating: Big_Cat/EfficientNetB0-10-(224 X 224)-100.00.h5  \n  inflating: Big_Cat/MobileNetV3 small-10-(224 X 224)-95.96.h5  \n  inflating: Big_Cat/WILDCATS.CSV    \n  inflating: Big_Cat/test/AFRICAN LEOPARD/1.jpg  \n  inflating: Big_Cat/test/AFRICAN LEOPARD/5.jpg  \n  inflating: Big_Cat/test/CARACAL/1.jpg  \n  inflating: Big_Cat/test/CARACAL/5.jpg  \n  inflating: Big_Cat/test/CHEETAH/1.jpg  \n  inflating: Big_Cat/test/CHEETAH/5.jpg  \n  inflating: Big_Cat/test/CLOUDED LEOPARD/1.jpg  \n  inflating: Big_Cat/test/CLOUDED LEOPARD/5.jpg  \n  inflating: Big_Cat/test/JAGUAR/1.jpg  \n  inflating: Big_Cat/test/JAGUAR/5.jpg  \n  inflating: Big_Cat/test/LIONS/1.jpg  \n  inflating: Big_Cat/test/LIONS/5.jpg  \n  inflating: Big_Cat/test/OCELOT/1.jpg  \n  inflating: Big_Cat/test/OCELOT/5.jpg  \n  inflating: Big_Cat/test/PUMA/1.jpg  \n  inflating: Big_Cat/test/PUMA/5.jpg  \n  inflating: Big_Cat/test/SNOW LEOPARD/1.jpg  \n  inflating: Big_Cat/test/SNOW LEOPARD/5.jpg  \n  inflating: Big_Cat/test/TIGER/1.jpg  \n  inflating: Big_Cat/test/TIGER/5.jpg  \n  inflating: Big_Cat/train/AFRICAN LEOPARD/001.jpg  \n  inflating: Big_Cat/train/AFRICAN LEOPARD/236.jpg  \n  inflating: Big_Cat/train/CARACAL/001.jpg  \n  inflating: Big_Cat/train/CARACAL/236.jpg  \n  inflating: Big_Cat/train/CHEETAH/001.jpg  \n  inflating: Big_Cat/train/CHEETAH/235.jpg  \n  inflating: Big_Cat/train/CLOUDED LEOPARD/001.jpg  \n  inflating: Big_Cat/train/CLOUDED LEOPARD/229.jpg  \n  inflating: Big_Cat/train/JAGUAR/001.jpg  \n  inflating: Big_Cat/train/JAGUAR/238.jpg  \n  inflating: Big_Cat/train/LIONS/001.jpg  \n  inflating: Big_Cat/train/LIONS/228.jpg  \n  inflating: Big_Cat/train/OCELOT/001.jpg  \n  inflating: Big_Cat/train/OCELOT/233.jpg  \n  inflating: Big_Cat/train/PUMA/001.jpg  \n  inflating: Big_Cat/train/PUMA/236.jpg  \n  inflating: Big_Cat/train/SNOW LEOPARD/001.jpg  \n  inflating: Big_Cat/train/SNOW LEOPARD/231.jpg  \n  inflating: Big_Cat/train/TIGER/001.jpg  \n  inflating: Big_Cat/train/TIGER/237.jpg  \n  inflating: Big_Cat/valid/AFRICAN LEOPARD/1.jpg  \n  inflating: Big_Cat/valid/AFRICAN LEOPARD/5.jpg  \n  inflating: Big_Cat/valid/CARACAL/1.jpg\n  inflating: Big_Cat/valid/CARACAL/5.jpg  \n  inflating: Big_Cat/valid/CHEETAH/1.jpg  \n  inflating: Big_Cat/valid/CHEETAH/5.jpg  \n  inflating: Big_Cat/valid/CLOUDED LEOPARD/1.jpg  \n  inflating: Big_Cat/valid/CLOUDED LEOPARD/5.jpg  \n  inflating: Big_Cat/valid/JAGUAR/1.jpg  \n  inflating: Big_Cat/valid/JAGUAR/5.jpg  \n  inflating: Big_Cat/valid/LIONS/1.jpg  \n  inflating: Big_Cat/valid/LIONS/5.jpg  \n  inflating: Big_Cat/valid/OCELOT/1.jpg  \n  inflating: Big_Cat/valid/OCELOT/5.jpg  \n  inflating: Big_Cat/valid/PUMA/1.jpg  \n  inflating: Big_Cat/valid/PUMA/5.jpg  \n  inflating: Big_Cat/valid/SNOW LEOPARD/1.jpg  \n  inflating: Big_Cat/valid/SNOW LEOPARD/5.jpg  \n  inflating: Big_Cat/valid/TIGER/1.jpg  \n  inflating: Big_Cat/valid/TIGER/5.jpg  \n\n\n\nimport os\nimport shutil\n\n# Define the absolute paths of main, train and valid folders\nbig_cat_folder = '/content/Big_Cat/'\ntrain_folder = '/content/Big_Cat/train'\nvalid_folder = '/content/Big_Cat/valid'\n\n# Remove all files with \".h5\" extension\n!find {big_cat_folder} -type f -name '*.h5' -delete\n\n# Create a dictionary to track image counts\nimage_counts = {}\n\n# Get a list of subfolders in the train folder\ntrain_subfolders = [f.path for f in os.scandir(train_folder) if f.is_dir()]\n\n# Get a list of subfolders in the valid folder\nvalid_subfolders = [f.path for f in os.scandir(valid_folder) if f.is_dir()]\n\n# Move images from valid to their corresponding subfolders in train\nfor subfolder in valid_subfolders:\n    class_name = os.path.basename(subfolder)\n    train_subfolder = os.path.join(train_folder, class_name)\n\n    # Create the train subfolder if it doesn't exist\n    if not os.path.exists(train_subfolder):\n        os.makedirs(train_subfolder)\n\n    # Initialize counts in the dictionary\n    image_counts[f\"{class_name}_VALID\"] = len(os.listdir(subfolder))\n\n    # Move images from valid to train subfolder and update counts\n    for file in os.listdir(subfolder):\n        file_path = os.path.join(subfolder, file)\n        dest_path = os.path.join(train_subfolder, file)\n        shutil.move(file_path, dest_path)\n\n\n# Remove the empty valid subfolders\nfor subfolder in valid_subfolders:\n    os.rmdir(subfolder)\n\n# Get count of images in train folder so that we can understand on how much we are training\nfor subfolder in train_subfolders:\n    class_name = os.path.basename(subfolder)\n    image_counts[f\"{class_name}_TRAIN\"] = len(os.listdir(subfolder))\n\nsorted_image_counts = dict(sorted(image_counts.items()))\n\n# Print the sorted image counts dictionary\nprint(\"Sorted Image Counts:\")\nfor key, value in sorted_image_counts.items():\n    print(f\"{key}: {value}\")\nSorted Image Counts:\nAFRICAN LEOPARD_TRAIN: 241\nAFRICAN LEOPARD_VALID: 5\nCARACAL_TRAIN: 241\nCARACAL_VALID: 5\nCHEETAH_TRAIN: 240\nCHEETAH_VALID: 5\nCLOUDED LEOPARD_TRAIN: 234\nCLOUDED LEOPARD_VALID: 5\nJAGUAR_TRAIN: 243\nJAGUAR_VALID: 5\nLIONS_TRAIN: 233\nLIONS_VALID: 5\nOCELOT_TRAIN: 238\nOCELOT_VALID: 5\nPUMA_TRAIN: 241\nPUMA_VALID: 5\nSNOW LEOPARD_TRAIN: 236\nSNOW LEOPARD_VALID: 5\nTIGER_TRAIN: 242\nTIGER_VALID: 5\n\n\n\n#hide\n! [ -e /content ] && pip install -Uqq fastbook\n! pip install timm\n\nimport fastbook\nfastbook.setup_book()\nimport timm\n\n#hide\nfrom fastbook import *\nfrom fastai.vision.widgets import *\nfrom fastai.vision.all import *\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m719.8/719.8 kB[0m [31m7.1 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m510.5/510.5 kB[0m [31m11.6 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m116.3/116.3 kB[0m [31m13.7 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m194.1/194.1 kB[0m [31m2.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m134.8/134.8 kB[0m [31m12.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.6/1.6 MB[0m [31m19.3 MB/s[0m eta [36m0:00:00[0m\n[?25hCollecting timm\n  Downloading timm-0.9.16-py3-none-any.whl (2.2 MB)\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m2.2/2.2 MB[0m [31m15.2 MB/s[0m eta [36m0:00:00[0m\n[?25hRequirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from timm) (2.2.1+cu121)\nRequirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (from timm) (0.17.1+cu121)\nRequirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from timm) (6.0.1)\nRequirement already satisfied: huggingface_hub in /usr/local/lib/python3.10/dist-packages (from timm) (0.20.3)\nRequirement already satisfied: safetensors in /usr/local/lib/python3.10/dist-packages (from timm) (0.4.2)\nRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (3.13.3)\nRequirement already satisfied: fsspec&gt;=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (2023.6.0)\nRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (2.31.0)\nRequirement already satisfied: tqdm&gt;=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (4.66.2)\nRequirement already satisfied: typing-extensions&gt;=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (4.10.0)\nRequirement already satisfied: packaging&gt;=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (24.0)\nRequirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (1.12)\nRequirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (3.2.1)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (3.1.3)\nRequirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (8.9.2.26)\nRequirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.3.1)\nRequirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (11.0.2.54)\nRequirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (10.3.2.106)\nRequirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (11.4.5.107)\nRequirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.0.106)\nRequirement already satisfied: nvidia-nccl-cu12==2.19.3 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (2.19.3)\nRequirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: triton==2.2.0 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (2.2.0)\nRequirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107-&gt;torch-&gt;timm) (12.4.127)\nRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision-&gt;timm) (1.25.2)\nRequirement already satisfied: pillow!=8.3.*,&gt;=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision-&gt;timm) (9.4.0)\nRequirement already satisfied: MarkupSafe&gt;=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-&gt;torch-&gt;timm) (2.1.5)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (3.6)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (2.0.7)\nRequirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (2024.2.2)\nRequirement already satisfied: mpmath&gt;=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy-&gt;torch-&gt;timm) (1.3.0)\nInstalling collected packages: timm\nSuccessfully installed timm-0.9.16\nMounted at /content/gdrive\nverify_images() will return path of images which are corrupt and using unlink we can remove these files.\npath = Path('Big_Cat')\n\nfns = get_image_files(path)\ntotal_imagelength = len(fns)\nfailed = verify_images(fns)\nfailed_imagelength = len(failed)\n\nfailed.map(Path.unlink)\nImage_Count_Dict = {\"Total_Image_Count\": total_imagelength, \"Failed_Image_Count\": failed_imagelength}\nImage_Count_Dict\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\n\n\n\n\n{'Total_Image_Count': 2439, 'Failed_Image_Count': 0}\nWe have good chunk of images to be trained on\n\n\n\n\n\n\nbig_cat = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(128))\ndls = big_cat.dataloaders(path)\n\ndls.valid.show_batch(max_n=8, nrows=2)\n\n\n\npng\n\n\n\n\n\nbig_cat = big_cat.new(\n    item_tfms=RandomResizedCrop(224, min_scale=0.5),\n    batch_tfms=aug_transforms())\nbig_cat_dls = big_cat.dataloaders(path)\nbig_cat_dls.train.show_batch(max_n=8, nrows=2)\n\n\n\npng\n\n\n\n\n\n\nlearn = vision_learner(big_cat_dls, resnet34, metrics=error_rate)\nlearn.fine_tune(5)\nDownloading: \"https://download.pytorch.org/models/resnet34-b627a593.pth\" to /root/.cache/torch/hub/checkpoints/resnet34-b627a593.pth\n100%|██████████| 83.3M/83.3M [00:00&lt;00:00, 164MB/s]\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.837715\n\n\n0.237122\n\n\n0.088296\n\n\n00:13\n\n\n\n\n\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.565063\n\n\n0.141556\n\n\n0.041068\n\n\n00:18\n\n\n\n\n1\n\n\n0.431256\n\n\n0.147855\n\n\n0.051335\n\n\n00:20\n\n\n\n\n2\n\n\n0.337753\n\n\n0.119496\n\n\n0.036961\n\n\n00:17\n\n\n\n\n3\n\n\n0.268090\n\n\n0.115800\n\n\n0.032854\n\n\n00:14\n\n\n\n\n\nunderstand structure of model\nlearn.summary()\n\nSequential (Input shape: 64 x 3 x 224 x 224)\n============================================================================\nLayer (type)         Output Shape         Param #    Trainable \n============================================================================\n                     64 x 64 x 112 x 112 \nConv2d                                    9408       True      \nBatchNorm2d                               128        True      \nReLU                                                           \n____________________________________________________________________________\n                     64 x 64 x 56 x 56   \nMaxPool2d                                                      \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nReLU                                                           \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nReLU                                                           \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nReLU                                                           \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \n____________________________________________________________________________\n                     64 x 128 x 28 x 28  \nConv2d                                    73728      True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nConv2d                                    8192       True      \nBatchNorm2d                               256        True      \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \n____________________________________________________________________________\n                     64 x 256 x 14 x 14  \nConv2d                                    294912     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    32768      True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \n____________________________________________________________________________\n                     64 x 512 x 7 x 7    \nConv2d                                    1179648    True      \nBatchNorm2d                               1024       True      \nReLU                                                           \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nConv2d                                    131072     True      \nBatchNorm2d                               1024       True      \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nReLU                                                           \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nReLU                                                           \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \n____________________________________________________________________________\n                     64 x 512 x 1 x 1    \nAdaptiveAvgPool2d                                              \nAdaptiveMaxPool2d                                              \n____________________________________________________________________________\n                     64 x 1024           \nFlatten                                                        \nBatchNorm1d                               2048       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 512            \nLinear                                    524288     True      \nReLU                                                           \nBatchNorm1d                               1024       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 10             \nLinear                                    5120       True      \n____________________________________________________________________________\n\nTotal params: 21,817,152\nTotal trainable params: 21,817,152\nTotal non-trainable params: 0\n\nOptimizer used: &lt;function Adam at 0x7b5a37dbbeb0&gt;\nLoss function: FlattenedLoss of CrossEntropyLoss()\n\nModel unfrozen\n\nCallbacks:\n  - TrainEvalCallback\n  - CastToTensor\n  - Recorder\n  - ProgressCallback\n\n\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n\n\n\n\n\npng\n\n\n\n\n\ninterp.plot_top_losses(6, nrows=2, figsize=(18,4))\n\n\n\n\npng\n\n\nWe can observe from both the confusion matrix and visual representation that the model is having difficulty differentiating between the Jaguar and the African Leopard. Even I find it challenging to distinguish between the two. 😵 So, we can let it be.\n\n\n\n\n#hide_output\ncleaner = ImageClassifierCleaner(learn)\ncleaner\n\n\nVBox(children=(Dropdown(options=('AFRICAN LEOPARD', 'CARACAL', 'CHEETAH', 'CLOUDED LEOPARD', 'JAGUAR', 'LIONS'…\n\n\nfor idx in cleaner.delete(): cleaner.fns[idx].unlink()\nfor idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat)\n\n\n\n\n\n\n\n\n\n\nLet’s download Ross’s GitHub repository, which is regularly updated with benchmark data for computer vision architectures. These benchmark are created on Imagenet.\n! git clone --depth 1 https://github.com/rwightman/pytorch-image-models.git\n%cd pytorch-image-models/results\nCloning into 'pytorch-image-models'...\nremote: Enumerating objects: 572, done.[K\nremote: Counting objects: 100% (572/572), done.[K\nremote: Compressing objects: 100% (403/403), done.[K\nremote: Total 572 (delta 222), reused 341 (delta 163), pack-reused 0[K\nReceiving objects: 100% (572/572), 2.59 MiB | 4.87 MiB/s, done.\nResolving deltas: 100% (222/222), done.\n/content/pytorch-image-models/results/pytorch-image-models/results\nimport pandas as pd\n\nBenchmark_Result = pd.read_csv('results-imagenet.csv')\nBenchmark_Result['model_org'] = Benchmark_Result['model']\nBenchmark_Result['model'] = Benchmark_Result['model'].str.split('.').str[0]\nBenchmark_Result.head(5)\n\n\n\n\n\n\n\nmodel\n\n\ntop1\n\n\ntop1_err\n\n\ntop5\n\n\ntop5_err\n\n\nparam_count\n\n\nimg_size\n\n\ncrop_pct\n\n\ninterpolation\n\n\nmodel_org\n\n\n\n\n\n\n0\n\n\neva02_large_patch14_448\n\n\n90.052\n\n\n9.948\n\n\n99.048\n\n\n0.952\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_m38m_ft_in22k_in1k\n\n\n\n\n1\n\n\neva02_large_patch14_448\n\n\n89.970\n\n\n10.030\n\n\n99.012\n\n\n0.988\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_in22k_ft_in22k_in1k\n\n\n\n\n2\n\n\neva_giant_patch14_560\n\n\n89.786\n\n\n10.214\n\n\n98.992\n\n\n1.008\n\n\n1,014.45\n\n\n560\n\n\n1.0\n\n\nbicubic\n\n\neva_giant_patch14_560.m30m_ft_in22k_in1k\n\n\n\n\n3\n\n\neva02_large_patch14_448\n\n\n89.622\n\n\n10.378\n\n\n98.950\n\n\n1.050\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_in22k_ft_in1k\n\n\n\n\n4\n\n\neva02_large_patch14_448\n\n\n89.574\n\n\n10.426\n\n\n98.924\n\n\n1.076\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_m38m_ft_in1k\n\n\n\n\n\nLet’s add a “family” column that will allow us to group architectures into categories with similar characteristics:\ndef get_data(part, col):\n    df = pd.read_csv(f'benchmark-{part}-amp-nhwc-pt111-cu113-rtx3090.csv').merge(Benchmark_Result, on='model')\n    df['secs'] = 1. / df[col]\n    df['family'] = df.model.str.extract('^([a-z]+?(?:v2)?)(?:\\d|_|$)')\n    df = df[~df.model.str.endswith('gn')]\n    df.loc[df.model.str.contains('in22'),'family'] = df.loc[df.model.str.contains('in22'),'family'] + '_in22'\n    df.loc[df.model.str.contains('resnet.*d'),'family'] = df.loc[df.model.str.contains('resnet.*d'),'family'] + 'd'\n    return df[df.family.str.contains('^re[sg]netd?|beit|convnext|levit|efficient|vit|vgg|swin')]\n\nInference_Data = get_data('infer', 'infer_samples_per_sec')\nInference_Data.head(5)\n\n\n\n\n\n\n\nmodel\n\n\ninfer_samples_per_sec\n\n\ninfer_step_time\n\n\ninfer_batch_size\n\n\ninfer_img_size\n\n\nparam_count_x\n\n\ntop1\n\n\ntop1_err\n\n\ntop5\n\n\ntop5_err\n\n\nparam_count_y\n\n\nimg_size\n\n\ncrop_pct\n\n\ninterpolation\n\n\nmodel_org\n\n\nsecs\n\n\nfamily\n\n\n\n\n\n\n12\n\n\nlevit_128s\n\n\n21485.80\n\n\n47.648\n\n\n1024\n\n\n224\n\n\n7.78\n\n\n76.526\n\n\n23.474\n\n\n92.872\n\n\n7.128\n\n\n7.78\n\n\n224\n\n\n0.900\n\n\nbicubic\n\n\nlevit_128s.fb_dist_in1k\n\n\n0.000047\n\n\nlevit\n\n\n\n\n13\n\n\nregnetx_002\n\n\n17821.98\n\n\n57.446\n\n\n1024\n\n\n224\n\n\n2.68\n\n\n68.752\n\n\n31.248\n\n\n88.542\n\n\n11.458\n\n\n2.68\n\n\n224\n\n\n0.875\n\n\nbicubic\n\n\nregnetx_002.pycls_in1k\n\n\n0.000056\n\n\nregnetx\n\n\n\n\n15\n\n\nregnety_002\n\n\n16673.08\n\n\n61.405\n\n\n1024\n\n\n224\n\n\n3.16\n\n\n70.280\n\n\n29.720\n\n\n89.530\n\n\n10.470\n\n\n3.16\n\n\n224\n\n\n0.875\n\n\nbicubic\n\n\nregnety_002.pycls_in1k\n\n\n0.000060\n\n\nregnety\n\n\n\n\n17\n\n\nlevit_128\n\n\n14657.83\n\n\n69.849\n\n\n1024\n\n\n224\n\n\n9.21\n\n\n78.490\n\n\n21.510\n\n\n94.012\n\n\n5.988\n\n\n9.21\n\n\n224\n\n\n0.900\n\n\nbicubic\n\n\nlevit_128.fb_dist_in1k\n\n\n0.000068\n\n\nlevit\n\n\n\n\n18\n\n\nregnetx_004\n\n\n14440.03\n\n\n70.903\n\n\n1024\n\n\n224\n\n\n5.16\n\n\n72.402\n\n\n27.598\n\n\n90.826\n\n\n9.174\n\n\n5.16\n\n\n224\n\n\n0.875\n\n\nbicubic\n\n\nregnetx_004.pycls_in1k\n\n\n0.000069\n\n\nregnetx\n\n\n\n\n\n\n\n\nHere’s the results for inference performance (see the last section for training performance). In this chart:\n\nthe x axis shows how many seconds it takes to process one image (note: it’s a log scale)\nthe y axis is the accuracy on Imagenet\nthe size of each bubble is proportional to the size of images used in testing\nthe color shows what “family” the architecture is from.\n\nHover your mouse over a marker to see details about the model. Double-click in the legend to display just one family. Single-click in the legend to show or hide a family.\nimport plotly.express as px\nw,h = 1000,800\n\ndef show_all(Inference_Data, title, size):\n    return px.scatter(Inference_Data, width=w, height=h, size=Inference_Data[size]**2, title=title,\n        x='secs',  y='top1', log_x=True, color='family', hover_name='model_org', hover_data=[size])\n\nshow_all(Inference_Data, 'Inference', 'infer_img_size')\n\n\n\n\nLet’s create a plot for selected architectures which we would like to use normally\n# Filter data only for convnext, resnet\nkeywords = ['convnext', 'resnet','levit','beit']\n\n# Filter rows based on the exact keywords\nBest_Model_Df = Inference_Data[Inference_Data['family'].isin(keywords)]\n\nshow_all(Best_Model_Df, 'Inference', 'infer_img_size')\n\n\n\n\nLet’s add lines through the points of each family, to help see how they compare – but note that we can see that a linear fit isn’t actually ideal here! It’s just there to help visually see the groups.\nsubs = 'levit|resnetd?|regnetx|vgg|convnext.*|efficientnetv2|beit|swin'\n\ndef show_subs(Inference_Data, title, size):\n    df_subs = Inference_Data[Inference_Data.family.str.fullmatch(subs)]\n    return px.scatter(df_subs, width=w, height=h, size=df_subs[size]**2, title=title,\n        trendline=\"ols\", trendline_options={'log_x':True},\n        x='secs',  y='top1', log_x=True, color='family', hover_name='model_org', hover_data=[size])\nshow_subs(Inference_Data, 'Inference', 'infer_img_size')\n\n\n\n\n\n\n\n\nList of all the basic & tiny version models in Convnext and choose the best.\n[model for model in timm.list_models('convnext*') if 'base' in model or 'tiny' in model]\n['convnext_base',\n 'convnext_tiny',\n 'convnext_tiny_hnf',\n 'convnextv2_base',\n 'convnextv2_tiny']\nlearn_conv = vision_learner(dls, convnext_base, metrics=error_rate).to_fp16()\nlearn_conv.fine_tune(5)\n/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ConvNeXt_Base_Weights.IMAGENET1K_V1`. You can also use `weights=ConvNeXt_Base_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.130588\n\n\n0.183650\n\n\n0.045175\n\n\n00:17\n\n\n\n\n\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.306945\n\n\n0.164550\n\n\n0.047228\n\n\n00:20\n\n\n\n\n1\n\n\n0.253462\n\n\n0.118687\n\n\n0.026694\n\n\n00:11\n\n\n\n\n2\n\n\n0.207020\n\n\n0.103058\n\n\n0.024641\n\n\n00:11\n\n\n\n\n3\n\n\n0.175618\n\n\n0.094374\n\n\n0.020534\n\n\n00:11\n\n\n\n\n4\n\n\n0.151438\n\n\n0.092010\n\n\n0.020534\n\n\n00:13\n\n\n\n\n\nCompared to the resnet34 model, which had an error rate of 32%, the convnext_base model demonstrates a significant improvement with an error rate of just 21%\nStructure of the architecture\nlearn_conv.summary()\n\nSequential (Input shape: 64 x 3 x 128 x 128)\n============================================================================\nLayer (type)         Output Shape         Param #    Trainable \n============================================================================\n                     64 x 128 x 32 x 32  \nConv2d                                    6272       True      \nLayerNorm2d                               256        True      \nConv2d                                    6400       True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nPermute                                                        \nLayerNorm                                 256        True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 512  \nLinear                                    66048      True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nLinear                                    65664      True      \n____________________________________________________________________________\n                     64 x 128 x 32 x 32  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    6400       True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nPermute                                                        \nLayerNorm                                 256        True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 512  \nLinear                                    66048      True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nLinear                                    65664      True      \n____________________________________________________________________________\n                     64 x 128 x 32 x 32  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    6400       True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nPermute                                                        \nLayerNorm                                 256        True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 512  \nLinear                                    66048      True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nLinear                                    65664      True      \n____________________________________________________________________________\n                     64 x 128 x 32 x 32  \nPermute                                                        \nStochasticDepth                                                \nLayerNorm2d                               256        True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nConv2d                                    131328     True      \nConv2d                                    12800      True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nPermute                                                        \nLayerNorm                                 512        True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 1024 \nLinear                                    263168     True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nLinear                                    262400     True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    12800      True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nPermute                                                        \nLayerNorm                                 512        True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 1024 \nLinear                                    263168     True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nLinear                                    262400     True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    12800      True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nPermute                                                        \nLayerNorm                                 512        True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 1024 \nLinear                                    263168     True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nLinear                                    262400     True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nPermute                                                        \nStochasticDepth                                                \nLayerNorm2d                               512        True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nConv2d                                    524800     True      \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nLayerNorm2d                               1024       True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nConv2d                                    2098176    True      \nConv2d                                    51200      True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nPermute                                                        \nLayerNorm                                 2048       True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 4096   \nLinear                                    4198400    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nLinear                                    4195328    True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    51200      True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nPermute                                                        \nLayerNorm                                 2048       True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 4096   \nLinear                                    4198400    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nLinear                                    4195328    True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    51200      True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nPermute                                                        \nLayerNorm                                 2048       True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 4096   \nLinear                                    4198400    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nLinear                                    4195328    True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nPermute                                                        \nStochasticDepth                                                \n____________________________________________________________________________\n                     64 x 1024 x 1 x 1   \nAdaptiveAvgPool2d                                              \nAdaptiveMaxPool2d                                              \n____________________________________________________________________________\n                     64 x 2048           \nFlatten                                                        \nBatchNorm1d                               4096       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 512            \nLinear                                    1048576    True      \nReLU                                                           \nBatchNorm1d                               1024       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 10             \nLinear                                    5120       True      \n____________________________________________________________________________\n\nTotal params: 88,605,184\nTotal trainable params: 88,605,184\nTotal non-trainable params: 0\n\nOptimizer used: &lt;function Adam at 0x7b5a37dbbeb0&gt;\nLoss function: FlattenedLoss of CrossEntropyLoss()\n\nModel unfrozen\n\nCallbacks:\n  - TrainEvalCallback\n  - CastToTensor\n  - MixedPrecision\n  - Recorder\n  - ProgressCallback\nLet’s downlod the model for future reference\nlearn_conv.export('Big_Cat_Convnext_Model.pkl')\n#learn_conv.export('/content/drive/MyDrive/Colab Notebooks/FastAI Course/Big_Cat_Convnext_Model.pkl')\n\n\n\nLet’s test the model with an image\nfrom fastai.vision.all import *\nimport gradio as gr\nim = PILImage.create('/content/drive/MyDrive/Colab Notebooks/FastAI Course/SnowLeopard.jpg')\nim.thumbnail((224,224))\nim\n\nlearn_conv = load_learner('/content/drive/MyDrive/Colab Notebooks/FastAI Course/Big_Cat_Convnext_Model.pkl')\nlearn_conv.predict(im)\n\n('CHEETAH',\n tensor(2),\n tensor([1.0988e-04, 8.7617e-05, 9.2564e-01, 2.9294e-06, 1.2592e-06, 1.6162e-06,\n         2.6748e-02, 6.5111e-07, 4.7398e-02, 7.3348e-06]))\nlearn_conv.dls.vocab\n['AFRICAN LEOPARD', 'CARACAL', 'CHEETAH', 'CLOUDED LEOPARD', 'JAGUAR', 'LIONS', 'OCELOT', 'PUMA', 'SNOW LEOPARD', 'TIGER']\ncategories = learn_conv.dls.vocab\n\npred, idx, probs = learn_conv.predict(im)\nresult = dict(zip(categories, map(float,probs)))\nresult\n\n{'AFRICAN LEOPARD': 0.00010988322173943743,\n 'CARACAL': 8.761714707361534e-05,\n 'CHEETAH': 0.9256432056427002,\n 'CLOUDED LEOPARD': 2.929433776444057e-06,\n 'JAGUAR': 1.2592141729328432e-06,\n 'LIONS': 1.6162448446266353e-06,\n 'OCELOT': 0.026747871190309525,\n 'PUMA': 6.511066317216319e-07,\n 'SNOW LEOPARD': 0.04739758372306824,\n 'TIGER': 7.334848760365276e-06}\nTop 3 Predicted Cat Names with Highest Probability”\nsorted_result = dict(sorted(result.items(), key=lambda item: item[1], reverse=True))\ntop_classes = list(sorted_result.keys())[:3]\ntop_classes\n['CHEETAH', 'SNOW LEOPARD', 'OCELOT']\nSo our model predicted CHEETAH with probablity of 93%"
  },
  {
    "objectID": "posts/FastAI_Course_Lect3/index.html#level-1-repeat-last-lesson",
    "href": "posts/FastAI_Course_Lect3/index.html#level-1-repeat-last-lesson",
    "title": "FastAI Course Lecture 3 Notes",
    "section": "",
    "text": "from google.colab import files\n\n# Upload the Kaggle API key JSON file\nuploaded = files.upload()\n\n!pip install kaggle\n\n!mkdir -p ~/.kaggle\n!mv kaggle.json ~/.kaggle/\n!chmod 600 ~/.kaggle/kaggle.json\nSaving kaggle.json to kaggle.json\nRequirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.5.16)\nRequirement already satisfied: six&gt;=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.16.0)\nRequirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from kaggle) (2024.2.2)\nRequirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\nRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.31.0)\nRequirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.66.2)\nRequirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.4)\nRequirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.0.7)\nRequirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle) (6.1.0)\nRequirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach-&gt;kaggle) (0.5.1)\nRequirement already satisfied: text-unidecode&gt;=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify-&gt;kaggle) (1.3)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;kaggle) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;kaggle) (3.6)\n\n\nOpen dataset in Kaggle, click on 3 vertical dots (ellipsis) then click on Copy API comamnd, and we are good to go.\n!kaggle datasets download -d gpiosenka/cats-in-the-wild-image-classification\n\n# Create a folder called \"Big Cat\"\n!mkdir -p Big_Cat\n\n# Unzip the dataset into the \"Big Cat\" folder\n!unzip cats-in-the-wild-image-classification.zip -d Big_Cat\n\n# Remove the zip file\n!rm cats-in-the-wild-image-classification.zip\nDownloading cats-in-the-wild-image-classification.zip to /content\n 96% 118M/123M [00:01&lt;00:00, 57.4MB/s]\n100% 123M/123M [00:01&lt;00:00, 65.0MB/s]\nArchive:  cats-in-the-wild-image-classification.zip\n  inflating: Big_Cat/EfficientNetB0-10-(224 X 224)-100.00.h5  \n  inflating: Big_Cat/MobileNetV3 small-10-(224 X 224)-95.96.h5  \n  inflating: Big_Cat/WILDCATS.CSV    \n  inflating: Big_Cat/test/AFRICAN LEOPARD/1.jpg  \n  inflating: Big_Cat/test/AFRICAN LEOPARD/5.jpg  \n  inflating: Big_Cat/test/CARACAL/1.jpg  \n  inflating: Big_Cat/test/CARACAL/5.jpg  \n  inflating: Big_Cat/test/CHEETAH/1.jpg  \n  inflating: Big_Cat/test/CHEETAH/5.jpg  \n  inflating: Big_Cat/test/CLOUDED LEOPARD/1.jpg  \n  inflating: Big_Cat/test/CLOUDED LEOPARD/5.jpg  \n  inflating: Big_Cat/test/JAGUAR/1.jpg  \n  inflating: Big_Cat/test/JAGUAR/5.jpg  \n  inflating: Big_Cat/test/LIONS/1.jpg  \n  inflating: Big_Cat/test/LIONS/5.jpg  \n  inflating: Big_Cat/test/OCELOT/1.jpg  \n  inflating: Big_Cat/test/OCELOT/5.jpg  \n  inflating: Big_Cat/test/PUMA/1.jpg  \n  inflating: Big_Cat/test/PUMA/5.jpg  \n  inflating: Big_Cat/test/SNOW LEOPARD/1.jpg  \n  inflating: Big_Cat/test/SNOW LEOPARD/5.jpg  \n  inflating: Big_Cat/test/TIGER/1.jpg  \n  inflating: Big_Cat/test/TIGER/5.jpg  \n  inflating: Big_Cat/train/AFRICAN LEOPARD/001.jpg  \n  inflating: Big_Cat/train/AFRICAN LEOPARD/236.jpg  \n  inflating: Big_Cat/train/CARACAL/001.jpg  \n  inflating: Big_Cat/train/CARACAL/236.jpg  \n  inflating: Big_Cat/train/CHEETAH/001.jpg  \n  inflating: Big_Cat/train/CHEETAH/235.jpg  \n  inflating: Big_Cat/train/CLOUDED LEOPARD/001.jpg  \n  inflating: Big_Cat/train/CLOUDED LEOPARD/229.jpg  \n  inflating: Big_Cat/train/JAGUAR/001.jpg  \n  inflating: Big_Cat/train/JAGUAR/238.jpg  \n  inflating: Big_Cat/train/LIONS/001.jpg  \n  inflating: Big_Cat/train/LIONS/228.jpg  \n  inflating: Big_Cat/train/OCELOT/001.jpg  \n  inflating: Big_Cat/train/OCELOT/233.jpg  \n  inflating: Big_Cat/train/PUMA/001.jpg  \n  inflating: Big_Cat/train/PUMA/236.jpg  \n  inflating: Big_Cat/train/SNOW LEOPARD/001.jpg  \n  inflating: Big_Cat/train/SNOW LEOPARD/231.jpg  \n  inflating: Big_Cat/train/TIGER/001.jpg  \n  inflating: Big_Cat/train/TIGER/237.jpg  \n  inflating: Big_Cat/valid/AFRICAN LEOPARD/1.jpg  \n  inflating: Big_Cat/valid/AFRICAN LEOPARD/5.jpg  \n  inflating: Big_Cat/valid/CARACAL/1.jpg\n  inflating: Big_Cat/valid/CARACAL/5.jpg  \n  inflating: Big_Cat/valid/CHEETAH/1.jpg  \n  inflating: Big_Cat/valid/CHEETAH/5.jpg  \n  inflating: Big_Cat/valid/CLOUDED LEOPARD/1.jpg  \n  inflating: Big_Cat/valid/CLOUDED LEOPARD/5.jpg  \n  inflating: Big_Cat/valid/JAGUAR/1.jpg  \n  inflating: Big_Cat/valid/JAGUAR/5.jpg  \n  inflating: Big_Cat/valid/LIONS/1.jpg  \n  inflating: Big_Cat/valid/LIONS/5.jpg  \n  inflating: Big_Cat/valid/OCELOT/1.jpg  \n  inflating: Big_Cat/valid/OCELOT/5.jpg  \n  inflating: Big_Cat/valid/PUMA/1.jpg  \n  inflating: Big_Cat/valid/PUMA/5.jpg  \n  inflating: Big_Cat/valid/SNOW LEOPARD/1.jpg  \n  inflating: Big_Cat/valid/SNOW LEOPARD/5.jpg  \n  inflating: Big_Cat/valid/TIGER/1.jpg  \n  inflating: Big_Cat/valid/TIGER/5.jpg  \n\n\n\nimport os\nimport shutil\n\n# Define the absolute paths of main, train and valid folders\nbig_cat_folder = '/content/Big_Cat/'\ntrain_folder = '/content/Big_Cat/train'\nvalid_folder = '/content/Big_Cat/valid'\n\n# Remove all files with \".h5\" extension\n!find {big_cat_folder} -type f -name '*.h5' -delete\n\n# Create a dictionary to track image counts\nimage_counts = {}\n\n# Get a list of subfolders in the train folder\ntrain_subfolders = [f.path for f in os.scandir(train_folder) if f.is_dir()]\n\n# Get a list of subfolders in the valid folder\nvalid_subfolders = [f.path for f in os.scandir(valid_folder) if f.is_dir()]\n\n# Move images from valid to their corresponding subfolders in train\nfor subfolder in valid_subfolders:\n    class_name = os.path.basename(subfolder)\n    train_subfolder = os.path.join(train_folder, class_name)\n\n    # Create the train subfolder if it doesn't exist\n    if not os.path.exists(train_subfolder):\n        os.makedirs(train_subfolder)\n\n    # Initialize counts in the dictionary\n    image_counts[f\"{class_name}_VALID\"] = len(os.listdir(subfolder))\n\n    # Move images from valid to train subfolder and update counts\n    for file in os.listdir(subfolder):\n        file_path = os.path.join(subfolder, file)\n        dest_path = os.path.join(train_subfolder, file)\n        shutil.move(file_path, dest_path)\n\n\n# Remove the empty valid subfolders\nfor subfolder in valid_subfolders:\n    os.rmdir(subfolder)\n\n# Get count of images in train folder so that we can understand on how much we are training\nfor subfolder in train_subfolders:\n    class_name = os.path.basename(subfolder)\n    image_counts[f\"{class_name}_TRAIN\"] = len(os.listdir(subfolder))\n\nsorted_image_counts = dict(sorted(image_counts.items()))\n\n# Print the sorted image counts dictionary\nprint(\"Sorted Image Counts:\")\nfor key, value in sorted_image_counts.items():\n    print(f\"{key}: {value}\")\nSorted Image Counts:\nAFRICAN LEOPARD_TRAIN: 241\nAFRICAN LEOPARD_VALID: 5\nCARACAL_TRAIN: 241\nCARACAL_VALID: 5\nCHEETAH_TRAIN: 240\nCHEETAH_VALID: 5\nCLOUDED LEOPARD_TRAIN: 234\nCLOUDED LEOPARD_VALID: 5\nJAGUAR_TRAIN: 243\nJAGUAR_VALID: 5\nLIONS_TRAIN: 233\nLIONS_VALID: 5\nOCELOT_TRAIN: 238\nOCELOT_VALID: 5\nPUMA_TRAIN: 241\nPUMA_VALID: 5\nSNOW LEOPARD_TRAIN: 236\nSNOW LEOPARD_VALID: 5\nTIGER_TRAIN: 242\nTIGER_VALID: 5\n\n\n\n#hide\n! [ -e /content ] && pip install -Uqq fastbook\n! pip install timm\n\nimport fastbook\nfastbook.setup_book()\nimport timm\n\n#hide\nfrom fastbook import *\nfrom fastai.vision.widgets import *\nfrom fastai.vision.all import *\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m719.8/719.8 kB[0m [31m7.1 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m510.5/510.5 kB[0m [31m11.6 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m116.3/116.3 kB[0m [31m13.7 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m194.1/194.1 kB[0m [31m2.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m134.8/134.8 kB[0m [31m12.0 MB/s[0m eta [36m0:00:00[0m\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.6/1.6 MB[0m [31m19.3 MB/s[0m eta [36m0:00:00[0m\n[?25hCollecting timm\n  Downloading timm-0.9.16-py3-none-any.whl (2.2 MB)\n[2K     [90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m2.2/2.2 MB[0m [31m15.2 MB/s[0m eta [36m0:00:00[0m\n[?25hRequirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from timm) (2.2.1+cu121)\nRequirement already satisfied: torchvision in /usr/local/lib/python3.10/dist-packages (from timm) (0.17.1+cu121)\nRequirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from timm) (6.0.1)\nRequirement already satisfied: huggingface_hub in /usr/local/lib/python3.10/dist-packages (from timm) (0.20.3)\nRequirement already satisfied: safetensors in /usr/local/lib/python3.10/dist-packages (from timm) (0.4.2)\nRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (3.13.3)\nRequirement already satisfied: fsspec&gt;=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (2023.6.0)\nRequirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (2.31.0)\nRequirement already satisfied: tqdm&gt;=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (4.66.2)\nRequirement already satisfied: typing-extensions&gt;=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (4.10.0)\nRequirement already satisfied: packaging&gt;=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub-&gt;timm) (24.0)\nRequirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (1.12)\nRequirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (3.2.1)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (3.1.3)\nRequirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (8.9.2.26)\nRequirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.3.1)\nRequirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (11.0.2.54)\nRequirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (10.3.2.106)\nRequirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (11.4.5.107)\nRequirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.0.106)\nRequirement already satisfied: nvidia-nccl-cu12==2.19.3 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (2.19.3)\nRequirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (12.1.105)\nRequirement already satisfied: triton==2.2.0 in /usr/local/lib/python3.10/dist-packages (from torch-&gt;timm) (2.2.0)\nRequirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107-&gt;torch-&gt;timm) (12.4.127)\nRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from torchvision-&gt;timm) (1.25.2)\nRequirement already satisfied: pillow!=8.3.*,&gt;=5.3.0 in /usr/local/lib/python3.10/dist-packages (from torchvision-&gt;timm) (9.4.0)\nRequirement already satisfied: MarkupSafe&gt;=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-&gt;torch-&gt;timm) (2.1.5)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (3.6)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (2.0.7)\nRequirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-&gt;huggingface_hub-&gt;timm) (2024.2.2)\nRequirement already satisfied: mpmath&gt;=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy-&gt;torch-&gt;timm) (1.3.0)\nInstalling collected packages: timm\nSuccessfully installed timm-0.9.16\nMounted at /content/gdrive\nverify_images() will return path of images which are corrupt and using unlink we can remove these files.\npath = Path('Big_Cat')\n\nfns = get_image_files(path)\ntotal_imagelength = len(fns)\nfailed = verify_images(fns)\nfailed_imagelength = len(failed)\n\nfailed.map(Path.unlink)\nImage_Count_Dict = {\"Total_Image_Count\": total_imagelength, \"Failed_Image_Count\": failed_imagelength}\nImage_Count_Dict\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\n\n\n\n\n{'Total_Image_Count': 2439, 'Failed_Image_Count': 0}\nWe have good chunk of images to be trained on\n\n\n\n\n\n\nbig_cat = DataBlock(\n    blocks=(ImageBlock, CategoryBlock),\n    get_items=get_image_files,\n    splitter=RandomSplitter(valid_pct=0.2, seed=42),\n    get_y=parent_label,\n    item_tfms=Resize(128))\ndls = big_cat.dataloaders(path)\n\ndls.valid.show_batch(max_n=8, nrows=2)\n\n\n\npng\n\n\n\n\n\nbig_cat = big_cat.new(\n    item_tfms=RandomResizedCrop(224, min_scale=0.5),\n    batch_tfms=aug_transforms())\nbig_cat_dls = big_cat.dataloaders(path)\nbig_cat_dls.train.show_batch(max_n=8, nrows=2)\n\n\n\npng\n\n\n\n\n\n\nlearn = vision_learner(big_cat_dls, resnet34, metrics=error_rate)\nlearn.fine_tune(5)\nDownloading: \"https://download.pytorch.org/models/resnet34-b627a593.pth\" to /root/.cache/torch/hub/checkpoints/resnet34-b627a593.pth\n100%|██████████| 83.3M/83.3M [00:00&lt;00:00, 164MB/s]\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.837715\n\n\n0.237122\n\n\n0.088296\n\n\n00:13\n\n\n\n\n\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.565063\n\n\n0.141556\n\n\n0.041068\n\n\n00:18\n\n\n\n\n1\n\n\n0.431256\n\n\n0.147855\n\n\n0.051335\n\n\n00:20\n\n\n\n\n2\n\n\n0.337753\n\n\n0.119496\n\n\n0.036961\n\n\n00:17\n\n\n\n\n3\n\n\n0.268090\n\n\n0.115800\n\n\n0.032854\n\n\n00:14\n\n\n\n\n\nunderstand structure of model\nlearn.summary()\n\nSequential (Input shape: 64 x 3 x 224 x 224)\n============================================================================\nLayer (type)         Output Shape         Param #    Trainable \n============================================================================\n                     64 x 64 x 112 x 112 \nConv2d                                    9408       True      \nBatchNorm2d                               128        True      \nReLU                                                           \n____________________________________________________________________________\n                     64 x 64 x 56 x 56   \nMaxPool2d                                                      \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nReLU                                                           \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nReLU                                                           \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \nReLU                                                           \nConv2d                                    36864      True      \nBatchNorm2d                               128        True      \n____________________________________________________________________________\n                     64 x 128 x 28 x 28  \nConv2d                                    73728      True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nConv2d                                    8192       True      \nBatchNorm2d                               256        True      \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \nReLU                                                           \nConv2d                                    147456     True      \nBatchNorm2d                               256        True      \n____________________________________________________________________________\n                     64 x 256 x 14 x 14  \nConv2d                                    294912     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    32768      True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \nReLU                                                           \nConv2d                                    589824     True      \nBatchNorm2d                               512        True      \n____________________________________________________________________________\n                     64 x 512 x 7 x 7    \nConv2d                                    1179648    True      \nBatchNorm2d                               1024       True      \nReLU                                                           \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nConv2d                                    131072     True      \nBatchNorm2d                               1024       True      \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nReLU                                                           \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \nReLU                                                           \nConv2d                                    2359296    True      \nBatchNorm2d                               1024       True      \n____________________________________________________________________________\n                     64 x 512 x 1 x 1    \nAdaptiveAvgPool2d                                              \nAdaptiveMaxPool2d                                              \n____________________________________________________________________________\n                     64 x 1024           \nFlatten                                                        \nBatchNorm1d                               2048       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 512            \nLinear                                    524288     True      \nReLU                                                           \nBatchNorm1d                               1024       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 10             \nLinear                                    5120       True      \n____________________________________________________________________________\n\nTotal params: 21,817,152\nTotal trainable params: 21,817,152\nTotal non-trainable params: 0\n\nOptimizer used: &lt;function Adam at 0x7b5a37dbbeb0&gt;\nLoss function: FlattenedLoss of CrossEntropyLoss()\n\nModel unfrozen\n\nCallbacks:\n  - TrainEvalCallback\n  - CastToTensor\n  - Recorder\n  - ProgressCallback\n\n\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()\n\n\n\n\n\npng\n\n\n\n\n\ninterp.plot_top_losses(6, nrows=2, figsize=(18,4))\n\n\n\n\npng\n\n\nWe can observe from both the confusion matrix and visual representation that the model is having difficulty differentiating between the Jaguar and the African Leopard. Even I find it challenging to distinguish between the two. 😵 So, we can let it be.\n\n\n\n\n#hide_output\ncleaner = ImageClassifierCleaner(learn)\ncleaner\n\n\nVBox(children=(Dropdown(options=('AFRICAN LEOPARD', 'CARACAL', 'CHEETAH', 'CLOUDED LEOPARD', 'JAGUAR', 'LIONS'…\n\n\nfor idx in cleaner.delete(): cleaner.fns[idx].unlink()\nfor idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), path/cat)"
  },
  {
    "objectID": "posts/FastAI_Course_Lect3/index.html#level-2-understand-computer-vision-architectures",
    "href": "posts/FastAI_Course_Lect3/index.html#level-2-understand-computer-vision-architectures",
    "title": "FastAI Course Lecture 3 Notes",
    "section": "",
    "text": "Let’s download Ross’s GitHub repository, which is regularly updated with benchmark data for computer vision architectures. These benchmark are created on Imagenet.\n! git clone --depth 1 https://github.com/rwightman/pytorch-image-models.git\n%cd pytorch-image-models/results\nCloning into 'pytorch-image-models'...\nremote: Enumerating objects: 572, done.[K\nremote: Counting objects: 100% (572/572), done.[K\nremote: Compressing objects: 100% (403/403), done.[K\nremote: Total 572 (delta 222), reused 341 (delta 163), pack-reused 0[K\nReceiving objects: 100% (572/572), 2.59 MiB | 4.87 MiB/s, done.\nResolving deltas: 100% (222/222), done.\n/content/pytorch-image-models/results/pytorch-image-models/results\nimport pandas as pd\n\nBenchmark_Result = pd.read_csv('results-imagenet.csv')\nBenchmark_Result['model_org'] = Benchmark_Result['model']\nBenchmark_Result['model'] = Benchmark_Result['model'].str.split('.').str[0]\nBenchmark_Result.head(5)\n\n\n\n\n\n\n\nmodel\n\n\ntop1\n\n\ntop1_err\n\n\ntop5\n\n\ntop5_err\n\n\nparam_count\n\n\nimg_size\n\n\ncrop_pct\n\n\ninterpolation\n\n\nmodel_org\n\n\n\n\n\n\n0\n\n\neva02_large_patch14_448\n\n\n90.052\n\n\n9.948\n\n\n99.048\n\n\n0.952\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_m38m_ft_in22k_in1k\n\n\n\n\n1\n\n\neva02_large_patch14_448\n\n\n89.970\n\n\n10.030\n\n\n99.012\n\n\n0.988\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_in22k_ft_in22k_in1k\n\n\n\n\n2\n\n\neva_giant_patch14_560\n\n\n89.786\n\n\n10.214\n\n\n98.992\n\n\n1.008\n\n\n1,014.45\n\n\n560\n\n\n1.0\n\n\nbicubic\n\n\neva_giant_patch14_560.m30m_ft_in22k_in1k\n\n\n\n\n3\n\n\neva02_large_patch14_448\n\n\n89.622\n\n\n10.378\n\n\n98.950\n\n\n1.050\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_in22k_ft_in1k\n\n\n\n\n4\n\n\neva02_large_patch14_448\n\n\n89.574\n\n\n10.426\n\n\n98.924\n\n\n1.076\n\n\n305.08\n\n\n448\n\n\n1.0\n\n\nbicubic\n\n\neva02_large_patch14_448.mim_m38m_ft_in1k\n\n\n\n\n\nLet’s add a “family” column that will allow us to group architectures into categories with similar characteristics:\ndef get_data(part, col):\n    df = pd.read_csv(f'benchmark-{part}-amp-nhwc-pt111-cu113-rtx3090.csv').merge(Benchmark_Result, on='model')\n    df['secs'] = 1. / df[col]\n    df['family'] = df.model.str.extract('^([a-z]+?(?:v2)?)(?:\\d|_|$)')\n    df = df[~df.model.str.endswith('gn')]\n    df.loc[df.model.str.contains('in22'),'family'] = df.loc[df.model.str.contains('in22'),'family'] + '_in22'\n    df.loc[df.model.str.contains('resnet.*d'),'family'] = df.loc[df.model.str.contains('resnet.*d'),'family'] + 'd'\n    return df[df.family.str.contains('^re[sg]netd?|beit|convnext|levit|efficient|vit|vgg|swin')]\n\nInference_Data = get_data('infer', 'infer_samples_per_sec')\nInference_Data.head(5)\n\n\n\n\n\n\n\nmodel\n\n\ninfer_samples_per_sec\n\n\ninfer_step_time\n\n\ninfer_batch_size\n\n\ninfer_img_size\n\n\nparam_count_x\n\n\ntop1\n\n\ntop1_err\n\n\ntop5\n\n\ntop5_err\n\n\nparam_count_y\n\n\nimg_size\n\n\ncrop_pct\n\n\ninterpolation\n\n\nmodel_org\n\n\nsecs\n\n\nfamily\n\n\n\n\n\n\n12\n\n\nlevit_128s\n\n\n21485.80\n\n\n47.648\n\n\n1024\n\n\n224\n\n\n7.78\n\n\n76.526\n\n\n23.474\n\n\n92.872\n\n\n7.128\n\n\n7.78\n\n\n224\n\n\n0.900\n\n\nbicubic\n\n\nlevit_128s.fb_dist_in1k\n\n\n0.000047\n\n\nlevit\n\n\n\n\n13\n\n\nregnetx_002\n\n\n17821.98\n\n\n57.446\n\n\n1024\n\n\n224\n\n\n2.68\n\n\n68.752\n\n\n31.248\n\n\n88.542\n\n\n11.458\n\n\n2.68\n\n\n224\n\n\n0.875\n\n\nbicubic\n\n\nregnetx_002.pycls_in1k\n\n\n0.000056\n\n\nregnetx\n\n\n\n\n15\n\n\nregnety_002\n\n\n16673.08\n\n\n61.405\n\n\n1024\n\n\n224\n\n\n3.16\n\n\n70.280\n\n\n29.720\n\n\n89.530\n\n\n10.470\n\n\n3.16\n\n\n224\n\n\n0.875\n\n\nbicubic\n\n\nregnety_002.pycls_in1k\n\n\n0.000060\n\n\nregnety\n\n\n\n\n17\n\n\nlevit_128\n\n\n14657.83\n\n\n69.849\n\n\n1024\n\n\n224\n\n\n9.21\n\n\n78.490\n\n\n21.510\n\n\n94.012\n\n\n5.988\n\n\n9.21\n\n\n224\n\n\n0.900\n\n\nbicubic\n\n\nlevit_128.fb_dist_in1k\n\n\n0.000068\n\n\nlevit\n\n\n\n\n18\n\n\nregnetx_004\n\n\n14440.03\n\n\n70.903\n\n\n1024\n\n\n224\n\n\n5.16\n\n\n72.402\n\n\n27.598\n\n\n90.826\n\n\n9.174\n\n\n5.16\n\n\n224\n\n\n0.875\n\n\nbicubic\n\n\nregnetx_004.pycls_in1k\n\n\n0.000069\n\n\nregnetx\n\n\n\n\n\n\n\n\nHere’s the results for inference performance (see the last section for training performance). In this chart:\n\nthe x axis shows how many seconds it takes to process one image (note: it’s a log scale)\nthe y axis is the accuracy on Imagenet\nthe size of each bubble is proportional to the size of images used in testing\nthe color shows what “family” the architecture is from.\n\nHover your mouse over a marker to see details about the model. Double-click in the legend to display just one family. Single-click in the legend to show or hide a family.\nimport plotly.express as px\nw,h = 1000,800\n\ndef show_all(Inference_Data, title, size):\n    return px.scatter(Inference_Data, width=w, height=h, size=Inference_Data[size]**2, title=title,\n        x='secs',  y='top1', log_x=True, color='family', hover_name='model_org', hover_data=[size])\n\nshow_all(Inference_Data, 'Inference', 'infer_img_size')\n\n\n\n\nLet’s create a plot for selected architectures which we would like to use normally\n# Filter data only for convnext, resnet\nkeywords = ['convnext', 'resnet','levit','beit']\n\n# Filter rows based on the exact keywords\nBest_Model_Df = Inference_Data[Inference_Data['family'].isin(keywords)]\n\nshow_all(Best_Model_Df, 'Inference', 'infer_img_size')\n\n\n\n\nLet’s add lines through the points of each family, to help see how they compare – but note that we can see that a linear fit isn’t actually ideal here! It’s just there to help visually see the groups.\nsubs = 'levit|resnetd?|regnetx|vgg|convnext.*|efficientnetv2|beit|swin'\n\ndef show_subs(Inference_Data, title, size):\n    df_subs = Inference_Data[Inference_Data.family.str.fullmatch(subs)]\n    return px.scatter(df_subs, width=w, height=h, size=df_subs[size]**2, title=title,\n        trendline=\"ols\", trendline_options={'log_x':True},\n        x='secs',  y='top1', log_x=True, color='family', hover_name='model_org', hover_data=[size])\nshow_subs(Inference_Data, 'Inference', 'infer_img_size')"
  },
  {
    "objectID": "posts/FastAI_Course_Lect3/index.html#level-3-build-a-model-using-convnextbasic-or-tiny",
    "href": "posts/FastAI_Course_Lect3/index.html#level-3-build-a-model-using-convnextbasic-or-tiny",
    "title": "FastAI Course Lecture 3 Notes",
    "section": "",
    "text": "List of all the basic & tiny version models in Convnext and choose the best.\n[model for model in timm.list_models('convnext*') if 'base' in model or 'tiny' in model]\n['convnext_base',\n 'convnext_tiny',\n 'convnext_tiny_hnf',\n 'convnextv2_base',\n 'convnextv2_tiny']\nlearn_conv = vision_learner(dls, convnext_base, metrics=error_rate).to_fp16()\nlearn_conv.fine_tune(5)\n/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n  warnings.warn(\n/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ConvNeXt_Base_Weights.IMAGENET1K_V1`. You can also use `weights=ConvNeXt_Base_Weights.DEFAULT` to get the most up-to-date weights.\n  warnings.warn(msg)\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n1.130588\n\n\n0.183650\n\n\n0.045175\n\n\n00:17\n\n\n\n\n\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\n\n\n\n\n\nepoch\n\n\ntrain_loss\n\n\nvalid_loss\n\n\nerror_rate\n\n\ntime\n\n\n\n\n\n\n0\n\n\n0.306945\n\n\n0.164550\n\n\n0.047228\n\n\n00:20\n\n\n\n\n1\n\n\n0.253462\n\n\n0.118687\n\n\n0.026694\n\n\n00:11\n\n\n\n\n2\n\n\n0.207020\n\n\n0.103058\n\n\n0.024641\n\n\n00:11\n\n\n\n\n3\n\n\n0.175618\n\n\n0.094374\n\n\n0.020534\n\n\n00:11\n\n\n\n\n4\n\n\n0.151438\n\n\n0.092010\n\n\n0.020534\n\n\n00:13\n\n\n\n\n\nCompared to the resnet34 model, which had an error rate of 32%, the convnext_base model demonstrates a significant improvement with an error rate of just 21%\nStructure of the architecture\nlearn_conv.summary()\n\nSequential (Input shape: 64 x 3 x 128 x 128)\n============================================================================\nLayer (type)         Output Shape         Param #    Trainable \n============================================================================\n                     64 x 128 x 32 x 32  \nConv2d                                    6272       True      \nLayerNorm2d                               256        True      \nConv2d                                    6400       True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nPermute                                                        \nLayerNorm                                 256        True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 512  \nLinear                                    66048      True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nLinear                                    65664      True      \n____________________________________________________________________________\n                     64 x 128 x 32 x 32  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    6400       True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nPermute                                                        \nLayerNorm                                 256        True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 512  \nLinear                                    66048      True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nLinear                                    65664      True      \n____________________________________________________________________________\n                     64 x 128 x 32 x 32  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    6400       True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nPermute                                                        \nLayerNorm                                 256        True      \n____________________________________________________________________________\n                     64 x 32 x 32 x 512  \nLinear                                    66048      True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 32 x 32 x 128  \nLinear                                    65664      True      \n____________________________________________________________________________\n                     64 x 128 x 32 x 32  \nPermute                                                        \nStochasticDepth                                                \nLayerNorm2d                               256        True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nConv2d                                    131328     True      \nConv2d                                    12800      True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nPermute                                                        \nLayerNorm                                 512        True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 1024 \nLinear                                    263168     True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nLinear                                    262400     True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    12800      True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nPermute                                                        \nLayerNorm                                 512        True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 1024 \nLinear                                    263168     True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nLinear                                    262400     True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    12800      True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nPermute                                                        \nLayerNorm                                 512        True      \n____________________________________________________________________________\n                     64 x 16 x 16 x 1024 \nLinear                                    263168     True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 16 x 16 x 256  \nLinear                                    262400     True      \n____________________________________________________________________________\n                     64 x 256 x 16 x 16  \nPermute                                                        \nStochasticDepth                                                \nLayerNorm2d                               512        True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nConv2d                                    524800     True      \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    25600      True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nPermute                                                        \nLayerNorm                                 1024       True      \n____________________________________________________________________________\n                     64 x 8 x 8 x 2048   \nLinear                                    1050624    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 8 x 8 x 512    \nLinear                                    1049088    True      \n____________________________________________________________________________\n                     64 x 512 x 8 x 8    \nPermute                                                        \nStochasticDepth                                                \nLayerNorm2d                               1024       True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nConv2d                                    2098176    True      \nConv2d                                    51200      True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nPermute                                                        \nLayerNorm                                 2048       True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 4096   \nLinear                                    4198400    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nLinear                                    4195328    True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    51200      True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nPermute                                                        \nLayerNorm                                 2048       True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 4096   \nLinear                                    4198400    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nLinear                                    4195328    True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nPermute                                                        \nStochasticDepth                                                \nConv2d                                    51200      True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nPermute                                                        \nLayerNorm                                 2048       True      \n____________________________________________________________________________\n                     64 x 4 x 4 x 4096   \nLinear                                    4198400    True      \nGELU                                                           \n____________________________________________________________________________\n                     64 x 4 x 4 x 1024   \nLinear                                    4195328    True      \n____________________________________________________________________________\n                     64 x 1024 x 4 x 4   \nPermute                                                        \nStochasticDepth                                                \n____________________________________________________________________________\n                     64 x 1024 x 1 x 1   \nAdaptiveAvgPool2d                                              \nAdaptiveMaxPool2d                                              \n____________________________________________________________________________\n                     64 x 2048           \nFlatten                                                        \nBatchNorm1d                               4096       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 512            \nLinear                                    1048576    True      \nReLU                                                           \nBatchNorm1d                               1024       True      \nDropout                                                        \n____________________________________________________________________________\n                     64 x 10             \nLinear                                    5120       True      \n____________________________________________________________________________\n\nTotal params: 88,605,184\nTotal trainable params: 88,605,184\nTotal non-trainable params: 0\n\nOptimizer used: &lt;function Adam at 0x7b5a37dbbeb0&gt;\nLoss function: FlattenedLoss of CrossEntropyLoss()\n\nModel unfrozen\n\nCallbacks:\n  - TrainEvalCallback\n  - CastToTensor\n  - MixedPrecision\n  - Recorder\n  - ProgressCallback\nLet’s downlod the model for future reference\nlearn_conv.export('Big_Cat_Convnext_Model.pkl')\n#learn_conv.export('/content/drive/MyDrive/Colab Notebooks/FastAI Course/Big_Cat_Convnext_Model.pkl')"
  },
  {
    "objectID": "posts/FastAI_Course_Lect3/index.html#level-4.-live-model",
    "href": "posts/FastAI_Course_Lect3/index.html#level-4.-live-model",
    "title": "FastAI Course Lecture 3 Notes",
    "section": "",
    "text": "Let’s create a data frame to have info of Big_Cat like there scientific name, Where they are found, there official count, there average life span.\nimport pandas as pd\n\n# Names of Big Cats\nbig_cat_names = learn_conv.dls.vocab\n\n# Sample data for the DataFrame\ndata = {\n    'Big_Cat_Name': big_cat_names,\n    'Scientific Name': [\n        \"Panthera pardus\",\n        \"Caracal caracal\",\n        \"Acinonyx jubatus\",\n        \"Neofelis nebulosa\",\n        \"Panthera onca\",\n        \"Panthera leo\",\n        \"Leopardus pardalis\",\n        \"Puma concolor\",\n        \"Panthera uncia\",\n        \"Panthera tigris\"\n    ],\n    'Where this cat is found normally': [\n        \"Africa and parts of Asia\",\n        \"Africa, Middle East, and parts of Asia\",\n        \"Africa and parts of Iran\",\n        \"Southeast Asia, China, and parts of India\",\n        \"Americas, particularly in rainforests\",\n        \"Africa, particularly in savannas\",\n        \"Americas, from Texas to Argentina\",\n        \"Americas, Canada to South America\",\n        \"Central Asia, Himalayas, and Siberia\",\n        \"Asia, particularly in forests and grasslands\"\n    ],\n    'Official Count': [\n        \"7,100\",\n        \"50,000\",\n        \"7,000\",\n        \"10,000\",\n        \"64,000\",\n        \"20,000\",\n        \"40,000\",\n        \"30,000\",\n        \"4,000\",\n        \"5,574\"\n    ],\n    'Average Life Span': [\n        \"10-12\",\n        \"10-12\",\n        \"10-12\",\n        \"11\",\n        \"12-15\",\n        \"8-16\",\n        \"8-11\",\n        \"8-13\",\n        \"10-13 years\",\n        \"10-15 years\"\n    ]\n}\n\n# Create the DataFrame\ndf_info = pd.DataFrame(data)\n\n# Display the DataFrame\nprint(df_info)\n      Big_Cat_Name     Scientific Name  \\\n0  AFRICAN LEOPARD     Panthera pardus   \n1          CARACAL     Caracal caracal   \n2          CHEETAH    Acinonyx jubatus   \n3  CLOUDED LEOPARD   Neofelis nebulosa   \n4           JAGUAR       Panthera onca   \n5            LIONS        Panthera leo   \n6           OCELOT  Leopardus pardalis   \n7             PUMA       Puma concolor   \n8     SNOW LEOPARD      Panthera uncia   \n9            TIGER     Panthera tigris   \n\n               Where this cat is found normally Official Count  \\\n0                      Africa and parts of Asia          7,100   \n1        Africa, Middle East, and parts of Asia         50,000   \n2                      Africa and parts of Iran          7,000   \n3     Southeast Asia, China, and parts of India         10,000   \n4         Americas, particularly in rainforests         64,000   \n5              Africa, particularly in savannas         20,000   \n6             Americas, from Texas to Argentina         40,000   \n7             Americas, Canada to South America         30,000   \n8          Central Asia, Himalayas, and Siberia          4,000   \n9  Asia, particularly in forests and grasslands          5,574   \n\n  Average Life Span  \n0             10-12  \n1             10-12  \n2             10-12  \n3                11  \n4             12-15  \n5              8-16  \n6              8-11  \n7              8-13  \n8       10-13 years  \n9       10-15 years  \n! pip install gradio\nimport gradio as gr\n\n# Function to fetch additional information from df_info\ndef get_additional_info(cat_name):\n    info_row = df_info[df_info['Big_Cat_Name'] == cat_name].iloc[0]\n    return {\n        'Scientific Name': info_row['Scientific Name'],\n        'Where this cat is found normally': info_row['Where this cat is found normally'],\n        'Official Count': info_row['Official Count']\n    }\ncategories = learn_conv.dls.vocab\n\n# Modified classify_image function\ndef classify_image(img):\n    pred, idx, probs = learn_conv.predict(img)\n    result = dict(zip(categories, map(float,probs)))\n\n    # Sort the result dictionary by probabilities in descending order\n    sorted_result = dict(sorted(result.items(), key=lambda item: item[1], reverse=True))\n\n    # Extract the top three classes and their probabilities\n    top_classes = list(sorted_result.keys())[:3]\n    top_probabilities = [sorted_result[class_name] for class_name in top_classes]\n\n    # Get additional information for each top class from df_info\n    additional_info = {cat_name: get_additional_info(cat_name) for cat_name in top_classes}\n\n    # Create a string representation of the top predictions along with their probabilities\n    prediction_str = \"\"\n    for cat_name, prob in zip(top_classes, top_probabilities):\n        prediction_str += f\"{cat_name}: {prob:.2%}\\n\"\n        prediction_str += f\"Scientific Name: {additional_info[cat_name]['Scientific Name']}\\n\"\n        prediction_str += f\"Where this cat is found normally: {additional_info[cat_name]['Where this cat is found normally']}\\n\"\n        prediction_str += f\"Official Count: {additional_info[cat_name]['Official Count']}\\n\\n\"\n\n    return prediction_str\n#export\ntitle = \"&lt;div style='font-size: 40px; text-align: center;'&gt;Big Cat Type&lt;/div&gt;\"\ndescription = \"&lt;div style='font-size: 38px;'&gt;Upload a photo of a Big Cat and get to know which breed it is!!&lt;/div&gt;\"\n\nimage = gr.Image()\nlabel = gr.Label()\nexamples = ['/content/drive/MyDrive/Colab Notebooks/FastAI Course/SnowLeopard.jpg']\n#export\nintf = gr.Interface(\n    fn=classify_image,\n    inputs=image, outputs=label,\n    title=title,\n    description=description,\n    examples=examples)\nintf.launch(share=True, debug=True, inline=False)\nColab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\nRunning on public URL: https://050583c79cdad7a9e1.gradio.live\n\nThis share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)"
  },
  {
    "objectID": "posts/FastAI_Course_Lect3/index.html#level-4.-test-the-model",
    "href": "posts/FastAI_Course_Lect3/index.html#level-4.-test-the-model",
    "title": "FastAI Course Lecture 3 Notes",
    "section": "",
    "text": "Let’s test the model with an image\nfrom fastai.vision.all import *\nimport gradio as gr\nim = PILImage.create('/content/drive/MyDrive/Colab Notebooks/FastAI Course/SnowLeopard.jpg')\nim.thumbnail((224,224))\nim\n\nlearn_conv = load_learner('/content/drive/MyDrive/Colab Notebooks/FastAI Course/Big_Cat_Convnext_Model.pkl')\nlearn_conv.predict(im)\n\n('CHEETAH',\n tensor(2),\n tensor([1.0988e-04, 8.7617e-05, 9.2564e-01, 2.9294e-06, 1.2592e-06, 1.6162e-06,\n         2.6748e-02, 6.5111e-07, 4.7398e-02, 7.3348e-06]))\nlearn_conv.dls.vocab\n['AFRICAN LEOPARD', 'CARACAL', 'CHEETAH', 'CLOUDED LEOPARD', 'JAGUAR', 'LIONS', 'OCELOT', 'PUMA', 'SNOW LEOPARD', 'TIGER']\ncategories = learn_conv.dls.vocab\n\npred, idx, probs = learn_conv.predict(im)\nresult = dict(zip(categories, map(float,probs)))\nresult\n\n{'AFRICAN LEOPARD': 0.00010988322173943743,\n 'CARACAL': 8.761714707361534e-05,\n 'CHEETAH': 0.9256432056427002,\n 'CLOUDED LEOPARD': 2.929433776444057e-06,\n 'JAGUAR': 1.2592141729328432e-06,\n 'LIONS': 1.6162448446266353e-06,\n 'OCELOT': 0.026747871190309525,\n 'PUMA': 6.511066317216319e-07,\n 'SNOW LEOPARD': 0.04739758372306824,\n 'TIGER': 7.334848760365276e-06}\nTop 3 Predicted Cat Names with Highest Probability”\nsorted_result = dict(sorted(result.items(), key=lambda item: item[1], reverse=True))\ntop_classes = list(sorted_result.keys())[:3]\ntop_classes\n['CHEETAH', 'SNOW LEOPARD', 'OCELOT']\nSo our model predicted CHEETAH with probablity of 93%"
  }
]